[{"categories":[],"contents":"Introduction Python is one of most popular and most powerful and one of the fastest programming languages until now, Millions upon millions developers use python in their projects to script easily. also python is one of the easiest languages to learn and master. But there are some differences between python 2 and 3, and most beginners get confused and leave python because they can\u0026rsquo;t understand how these work. So let\u0026rsquo;s begin with python 2 and 3 at the same time shall we?\nEnvironment I\u0026rsquo;m using Visual Studio Code as my code editor. Windows, Mac and linux users can download and install python from the main website Here. And if you\u0026rsquo;re just going to try it, you can use these Online terminals for Python 2 and for Python 3. Follow the installer guide and don\u0026rsquo;t forget to add python to the path (Setup would do it for you). If everything goes according to the plan, you can see wether it\u0026rsquo;s installed or not by typing\n  python -v\r  To a terminal window, or windows Powershell or windows CMD and you\u0026rsquo;ll be greeted with bunch of version numbers. If it pops up errors, try adding python path.\nZero Here, we\u0026rsquo;re starting and continuing with the terminal, GUI programming is something else in python so, Don\u0026rsquo;t expect anything GUI related in the beginning. But I\u0026rsquo;ll provide you a GUI Tutorial in the future.\nFolder Structure Now, let\u0026rsquo;s begin with the Python Document. you have to create a file with .py extension, so it\u0026rsquo;ll be Identified as a python script. If you are using VS Code, just save it as a python file.\nAnd you\u0026rsquo;re ready with the file.\nBasic Syntax Here begins the differences of python 2 and 3. Let\u0026rsquo;s print a hello world phrase to the terminal. In python 2\n  print \u0026quot;Hello World!\u0026quot;\r  Python 3\n  print(\u0026quot;Hello World!\u0026quot;)\r  write this line in your document and save it. Now you can use a terminal and type\n  python \u0026lt;file-path\u0026gt;\r  To run the python script.\nor simply if you\u0026rsquo;re using VS Code like me, give the key combination\n  Ctrl + Shift + `\r  to get the terminal window and enter\n  python \u0026lt;filename\u0026gt;\r  to Run the file.\nYou should see the Hello world printed to the terminal! Now we can explore what we can do with python as a programming language.\nPython Identifiers Identifiers are names, that used to identify classes variables functions module or other objects. Identifiers must start with a-z or A-Z and can be continued with characters, underscores and numbers. Python does not allow punctuation characters such as @, $, and % within identifiers. And also python is case sensitive, which means it watches for capital and simple letters and \u0026lsquo;a\u0026rsquo; is not the same as \u0026lsquo;A\u0026rsquo;.\nHere are naming conventions for Python identifiers −\n Class names start with an uppercase letter. All other identifiers start with a lowercase letter. Starting an identifier with a single leading underscore indicates that the identifier is private. Starting an identifier with two leading underscores indicates a strongly private identifier. If the identifier also ends with two trailing underscores, the identifier is a language-defined special name.  Reserved Words These words are literally python keywords so you can\u0026rsquo;t use these as Identifiers, you\u0026rsquo;ll get in trouble if you did so, so keep these noticed\n   ======== ======== ========     and exec not   assert finally or   break for pass   class from print   continue global raise   def if return   del import try   elif in while   else is with   except lambda yield    Lines and Indentation Now this is something, you have to keep in your mind. python is different from other languages because of several reasons and here, It doesn\u0026rsquo;t has any braces at all, so white spacing is compulsory! Let\u0026rsquo;s check an example, Don\u0026rsquo;t consider the codes, I\u0026rsquo;ll explain them later.\nPython 2\n  if True:\rprint \u0026quot;Hello World\u0026quot;\relse:\rprint \u0026quot;Noo World\u0026quot;\r  Python 3\n  if True:\rprint (\u0026quot;Hello World\u0026quot;)\relse:\rprint (\u0026quot;Noo World\u0026quot;)\r  But this would show you an error because it doesn\u0026rsquo;t have proper white spaces.\nPython 2\n  if True:\rprint \u0026quot;Hello World\u0026quot;\relse:\rprint \u0026quot;Noo World\u0026quot;\r  Multi-Line Statements Statements in python ends with a new line, how ever there are some multiline statements, a hand full of them to try out. The line continuation character () would make a statement multiline as this. ( Examples are only for reference, we\u0026rsquo;ll discuss everything later. )\n  total = item_one + \\\ritem_two + \\\ritem_three\r  Statements withing [],{} or () doesn\u0026rsquo;t need the line continuation character.\n  classes = [ \u0026quot;12a\u0026quot;, \u0026quot;13b\u0026quot;,\r\u0026quot;5a\u0026quot;, \u0026quot;6a\u0026quot;,\r\u0026quot;7a\u0026quot;, \u0026quot;8a\u0026quot;]\r  Quotation in Python Python can identify single(') double (\u0026quot;) or triple (\u0026rsquo;\u0026rsquo;\u0026rsquo; or \u0026ldquo;\u0026quot;\u0026quot;) quotations to denote string literals, as long as it starts and ends, you\u0026rsquo;re good to go. The triple quotation can be used to denote multiline strings.\n  a = 'string here'\rb = \u0026quot;Another string here\u0026quot;\rc = ''' Do you guys\rhave strings? '''\rd = \u0026quot;\u0026quot;\u0026quot; Multiline Without\rany escape characters \u0026quot;\u0026quot;\u0026quot;\r  Comments in Python Comments are important to give hints about your program to future you, because no one can keep a thousand line codebase on their heads, and humans are designed to forget everything withing few days. Comments in python starts with a # sign and can be placed in a new line or after a statement\n  # This is a comment\rvariable = \u0026quot;bla bla bla\u0026quot; # This is a comment\r  and for multiline comments, you can also use the triple quotation technique but only in new lines.\npython 2\n  print \u0026quot;hello\u0026quot;\r'''\rThis is a comment\r'''\rprint \u0026quot;comment ends\u0026quot;\r  python 3\n  print (\u0026quot;hello\u0026quot;)\r'''\rThis is a comment\r'''\rprint (\u0026quot;comment ends\u0026quot;)\r  Using Blank Lines You\u0026rsquo;re free to use blank line as much as you want. But you can\u0026rsquo;t use blank lines inside objects classes or functions, It\u0026rsquo;ll make a mess, so trust me. Use blank lines for good.\nLet\u0026rsquo;s begin some actual codings.\nWaiting for the user In a certain point, we all have to take an input from the user. in python console, it\u0026rsquo;s simple as this. This is not a \u0026ldquo;String\u0026rdquo; input, but this is more like a \u0026ldquo;Press enter to continue\u0026rdquo; input.\n  raw_input(\u0026quot;\\n\\nPress the enter key to exit.\u0026quot;)\r  Multiple Statements on a Single Line We can use a semi-colone (;) to add multiple statements to a single line\npython 2\n  x = \u0026quot;hello\u0026quot;; y = \u0026quot;world\u0026quot;; print x + y\r  python 3\n  x = \u0026quot;hello\u0026quot;; y = \u0026quot;world\u0026quot;; print (x + y)\r  Multiple Statement Groups as Suites Here, it\u0026rsquo;s more like the curly braces of other languages, we call them suites here, the mechanic is the same so you won\u0026rsquo;t be bothered that much.\n  if expression : suite\relif expression : suite else : suite\r  if you aren\u0026rsquo;t comfortable with these for now, be cool you\u0026rsquo;ll understand later in this series. Let\u0026rsquo;s start with assigning variables.\nAssigning Values to Variables This is why python is one of my favorite programming languages, it does it\u0026rsquo;s basic work, it self. so considering variables, python is automatically assigning it\u0026rsquo;s variable types (explicit declaration), to reserve memory for that variable, so you can assign variables as this. Continue with the examples from now on.\n  a = \u0026quot;Hello World\u0026quot; # This is a string\rb = 15 # This is an integer\rc = 15.23 # This is a float\rd = true # This is a boolean\r  you can check them using,\nPython 2\n  print a\rprint b\rprint c\rprint d\r  Python 3\n  print (a)\rprint (b)\rprint (c)\rprint (d)\r  And there\u0026rsquo;s a way to assign multiple variables in python, at once. I can assign value of 1 (integer) to all a, b, and c using\n  a = b = c = 1\r  and you can use the print statements above to check again.\nStandard Data Types This is an important topic to understand, here I\u0026rsquo;m explaining what kind of data types you have to work with, programming languages are all the same so it won\u0026rsquo;t be hard if you\u0026rsquo;re coming from a \u0026ldquo;Background\u0026rdquo;, I\u0026rsquo;m explaining for everyone, so don\u0026rsquo;t panic.\nStandard Data Types And What They Are\n   Data Type Description Examples     Numbers These are Integers. Whole numbers in common. 1, 2, 3, 5, 10, 100   String These are paragraphs and they should contain within quotations. \u0026ldquo;This is a string\u0026rdquo;   List Lists are a collection of strings, numbers or any other data types and they contain within square brackets, It\u0026rsquo;s also the most versatile data Type [\u0026ldquo;Hello\u0026rdquo;,\u0026ldquo;World\u0026rdquo;,\u0026ldquo;15\u0026rdquo;,35]   Tuple These are exactly like lists but starts and ends with normal brackets. And Tuples can\u0026rsquo;t be updated, which means they are constants. (\u0026ldquo;Hello\u0026rdquo;,\u0026ldquo;World\u0026rdquo;,\u0026ldquo;15\u0026rdquo;,35)   Dictionary This is one of my favorites. Dictionaries consists of keys and values, which we can index in a way and return their data in another way. {\u0026lsquo;name\u0026rsquo;: \u0026lsquo;john\u0026rsquo;,\u0026lsquo;ID\u0026rsquo;:6734, \u0026lsquo;salary\u0026rsquo;: \u0026lsquo;500\u0026rsquo;}    Now Let\u0026rsquo;s Explore Data types One by one\nPython Strings Just paragraphs. and that\u0026rsquo;s all for the definition. There are string operators, which can be used to process strings in python. You can multiply, add another string to a string and slice. Run this example and see for your self\npython 2\n  str = \u0026quot;Hello World\u0026quot;\rprint str # Prints Whole String\rprint str*3 # Prints the string Three Times\rprint str + \u0026quot;WW\u0026quot; # Print the modified string\rprint str[0] # Prints the first character\rprint str[2:7] # Prints characters from 3rd to 7th\rprint str[2:] # Prints characters from 3 onwards\r  python 3\n  str = \u0026quot;Hello World\u0026quot;\rprint (str) # Prints Whole String\rprint (str*3) # Prints the string Three Times\rprint (str + \u0026quot;WW\u0026quot;) # Print the modified string\rprint (str[0]) # Prints the first character\rprint (str[2:7]) # Prints characters from 3rd to 7th\rprint (str[2:]) # Prints characters from 3 onwards\r  Python Numbers We\u0026rsquo;ll discuss basic operators later, for now, these are the types of numbers you have to work with\n   int long float complex     10 51924361L 0.0 3.14j   100 -0x19323L 15.20 45.j   -786 0122L -21.9 9.322e-36j   080 0xDEFABCECBDAECBFBAEl 32.3+e18 .876j   -0490 535633629843L -90. -.6545+0J   -0x260 -052318172735L -32.54e100 3e+26J   0x69 -4721885298529L 70.2-E12 4.53e-7j     Python allows you to use a lowercase l with long, but it is recommended that you use only an uppercase L to avoid confusion with the number 1. Python displays long integers with an uppercase L. A complex number consists of an ordered pair of real floating-point numbers denoted by x + yj, where x and y are the real numbers and j is the imaginary unit.  Python Lists These are versatile and you can use these to store a list of other data types as it is a \u0026ldquo;list\u0026rdquo;. now let\u0026rsquo;s define a list\n  lista = [\u0026quot;This is a list\u0026quot;, 56, \u0026quot;Hello There\u0026quot;, 98, 2.56]\rlistb = [\u0026quot;Another String\u0026quot;, 56.56]\r  Now let\u0026rsquo;s do some list operations\nPython 2\n  print lista*2 # Prints out the list 2 times\rprint lista + listb # Prints out lista and listb as a single list\rprint lista[0] # Prints the first item in the list\rprint lista[0:3] # Prints from first item to the third item\rprint lista[1:] # Prints from 2nd item onwards\r  Python 3\n  print (lista*2) # Prints out the list 2 times\rprint (lista + listb) # Prints out lista and listb as a single list\rprint (lista[0]) # Prints the first item in the list\rprint (lista[0:3]) # Prints from first item to the third item\rprint (lista[1:]) # Prints from 2nd item onwards\r  Also you can change certain items in lists as this\n  lista[0] = \u0026quot;Something Else\u0026quot;\rprint lista # For Python 2\rprint (lista) # For Python 3\r  Python Tuples These are also lists but they can\u0026rsquo;t be changed in the future\n  tuplea = [\u0026quot;This is a tuple\u0026quot;, 56, \u0026quot;Hello There\u0026quot;, 98, 2.56]\rtupleb = [\u0026quot;Another String\u0026quot;, 56.56]\r  Now let\u0026rsquo;s do some Tuple operations\nPython 2\n  print tuplea*2 # Prints out the tuple 2 times\rprint tuplea + tupleb # Prints out tuplea and tupleb as a single tuple\rprint tuplea[0] # Prints the first item in the tuple\rprint tuplea[0:3] # Prints from first item to the third item\rprint tuplea[1:] # Prints from 2nd item onwards\r  Python 3\n  print (tuplea*2) # Prints out the tuple 2 times\rprint (tuplea + tupleb) # Prints out tuplea and tupleb as a single tuple\rprint (tuplea[0]) # Prints the first item in the tuple\rprint (tuplea[0:3]) # Prints from first item to the third item\rprint (tuplea[1:]) # Prints from 2nd item onwards\r  And That\u0026rsquo;s all for Tuples. Now To the final data type, Dictionaries\nPython Dictionary Dictionaries are defined using curly braces {} and you can add items in the beginning or later. Remember dictionaries are using key, value pairs to define entries in it. for an example, a Phone book. Let\u0026rsquo;s make a simple phonebook here.\n  phonebook = {}\rphonebook[\u0026quot;Jhon\u0026quot;] = \u0026quot;0712345678\u0026quot;\rphonebook[\u0026quot;Doce\u0026quot;] = \u0026quot;0712345679\u0026quot;\rphonebook[\u0026quot;Anna\u0026quot;] = \u0026quot;0712345680\u0026quot;\ranotherPhonebook = {\u0026quot;Bella\u0026quot;:\u0026quot;0721234567\u0026quot;,\u0026quot;Becky\u0026quot;:\u0026quot;0721234568\u0026quot;,\u0026quot;Bola\u0026quot;:\u0026quot;0721234569\u0026quot;}\r  Now, Defining out to the way, you can use some simple operators to process these phone books. (Dictionaries) Let\u0026rsquo;s Combine, get values by name, get names, and get numbers from this phonebook.\n  bigPhonebook = phonebook + anotherPhonebook # Combines Phonebooks to a big one\rprint phonebook[\u0026quot;Jhon\u0026quot;] # Prints the number of Jhon\rprint phonebook # Prints the whole phonebook\rprint phonebook.keys() # Prints all of the names\rprint phonebook.values() # Prints all of the numbers\r  Data Type Conversion There are certain times when you have to convert data to another type, for an example let\u0026rsquo;s consider the string \u0026ldquo;180\u0026rdquo;, And we want to convert this to integers. so we can use a simple function and convert it to 180. Now look carefully, \u0026ldquo;180\u0026rdquo; is a string and not a number, because it has quotations around it. Let\u0026rsquo;s explore a bit.\n   Sr.No. Function Description     1 int(x [,base]) Converts x to an integer. base specifies the base if x is a string.   2 long(x [,base] ) Converts x to a long integer. base specifies the base if x is a string.   3 float(x) Converts x to a floating-point number.   4 complex(real [,imag]) Creates a complex number.   5 str(x) Converts object x to a string representation.   6 repr(x) Converts object x to an expression string.   7 eval(str) Evaluates a string and returns an object.   8 tuple(s) Converts s to a tuple.   9 list(s) Converts s to a list.   10 set(s) Converts s to a set.   11 dict(d) Creates a dictionary. d must be a sequence of (key,value) tuples.   12 frozenset(s) Converts s to a frozen set.   13 chr(x) Converts an integer to a character.   14 unichr(x) Converts an integer to a Unicode character.   15 ord(x) Converts a single character to its integer value.   16 hex(x) Converts an integer to a hexadecimal string.   17 oct(x) Converts an integer to an octal string.    plug the value to x and you can use the function anywhere you want. I\u0026rsquo;ll give you a single example on how to do this,\n  a = \u0026quot;150\u0026quot;\rb = int(a)\r  Python 2\n  print a*2\rprint b*2\r  Python 3\n  print (a*2)\rprint (b*2)\r  Figure out what happened here.\nBasic Operators Now, We\u0026rsquo;re in to the arithmetic part of our journey. But not only the arithmetics, Types of Operators in Python are categorized as below.\n Arithmetic Operators Comparison (Relational) Operators Assignment Operators Logical Operators Bitwise Operators Membership Operators Identity Operators  Let\u0026rsquo;s Explore one by one, I\u0026rsquo;ll provide you everything with brief explanations, We\u0026rsquo;ll dig deeper into these late. Also these are self explanatory.\nPython Arithmetic Operators These are the operators we use to preform arithmetic calculations.\nAssume variable a holds 10 and variable b holds 20, then\n   Operator Description Example     + Addition Adds values on either side of the operator. a + b = 30   - Subtraction Subtracts right hand operand from left hand operand. a – b = -10   * Multiplication Multiplies values on either side of the operator a * b = 200   / Division Divides left hand operand by right hand operand b / a = 2   % Modulus Divides left hand operand by right hand operand and returns remainder b % a = 0   ** Exponent\tPerforms exponential (power) calculation on operators a**b =10 to the power 20   // Floor Division - The division of operands where the result is the quotient in which the digits after the decimal point are removed. But if one of the operands is negative, the result is floored, i.e., rounded away from zero (towards negative infinity) 9//2 = 4 and 9.0//2.0=4.0, -11//3=-4, -11.0//3=-4.0    Python Comparison Operators we use comparison for our logical expressions.\nAssume variable a holds 10 and variable b holds 20, then\n   Operator Description Example     == If the values of two operands are equal, then the condition becomes true. (a == b) is not true.   != If values of two operands are not equal, then condition becomes true. (a != b) is true.   \u0026lt;\u0026gt; If values of two operands are not equal, then condition becomes true. (a \u0026lt;\u0026gt; b) is true. This is similar to != operator.   \u0026gt; If the value of left operand is greater than the value of right operand, then condition becomes true. (a \u0026gt; b) is not true.   \u0026lt; If the value of left operand is less than the value of right operand, then condition becomes true. (a \u0026lt; b) is true.   \u0026gt;= If the value of left operand is greater than or equal to the value of right operand, then condition becomes true. (a \u0026gt;= b) is not true.   \u0026lt;= If the value of left operand is less than or equal to the value of right operand, then condition becomes true. (a \u0026lt;= b) is true.    For an example, we can use on of these in a IF statement ( Just for examples )\n  a = \u0026quot;cat\u0026quot;\rb = \u0026quot;cat\u0026quot;\rif (a == b):\rprint(a)\relse:\rprint(b)\r  Python Assignment Operators These are for assigning variables\nAssume variable a holds 10 and variable b holds 20, then\n   Operator Description Example     = Assigns values from right side operands to left side operand c = a + b assigns value of a + b into c   += Add AND\tIt adds right operand to the left operand and assign the result to left operand c += a is equivalent to c = c + a   -= Subtract AND\tIt subtracts right operand from the left operand and assign the result to left operand c -= a is equivalent to c = c - a   *= Multiply AND\tIt multiplies right operand with the left operand and assign the result to left operand c *= a is equivalent to c = c * a   /= Divide AND\tIt divides left operand with the right operand and assign the result to left operand c /= a is equivalent to c = c / a   %= Modulus AND\tIt takes modulus using two operands and assign the result to left operand c %= a is equivalent to c = c % a   **= Exponent AND\tPerforms exponential (power) calculation on operators and assign value to the left operand c **= a is equivalent to c = c ** a   //= Floor Division\tIt performs floor division on operators and assign value to the left operand c //= a is equivalent to c = c // a    Python Bitwise Operators Bitwise operator works on bits and performs bit by bit operation. Assume if a = 60 and b = 13 Now in the binary format their values will be 0011 1100 and 0000 1101 respectively.\na = 0011 1100\nb = 0000 1101\na\u0026amp;b = 0000 1100\na|b = 0011 1101\na^b = 0011 0001\n~a = 1100 0011\nWhat the f happened here? It\u0026rsquo;s BITWISE. let\u0026rsquo;s explore\n   Operator Description Example     \u0026amp; Binary AND\tOperator copies a bit to the result if it exists in both operands (a \u0026amp; b) (means 0000 1100)   | Binary OR\tIt copies a bit if it exists in either operand. (a | b) = 61 (means 0011 1101)   ^ Binary XOR\tIt copies the bit if it is set in one operand but not both. (a ^ b) = 49 (means 0011 0001)   ~ Binary Ones Complement\tIt is unary and has the effect of \u0026lsquo;flipping\u0026rsquo; bits. (~a ) = -61 (means 1100 0011 in 2\u0026rsquo;s complement form due to a signed binary number.   \u0026laquo; Binary Left Shift\tThe left operands value is moved left by the number of bits specified by the right operand. a \u0026laquo; 2 = 240 (means 1111 0000)   \u0026raquo; Binary Right Shift\tThe left operands value is moved right by the number of bits specified by the right operand. a \u0026raquo; 2 = 15 (means 0000 1111)    Python Logical Operators We use these very often and notice these are more like creating sentences.\nAssume variable a holds 10 and variable b holds 20 then.\n   Operator Description Example     and Logical AND\tIf both the operands are true then condition becomes true. (a and b) is true.   or Logical OR\tIf any of the two operands are non-zero then condition becomes true. (a or b) is true.   not Logical NOT\tUsed to reverse the logical state of its operand. Not(a and b) is false.    Python Membership Operators These Operators used to check wether some value is in something, this would get handy when creating search engines or so.\n   Operator Description Example     in Evaluates to true if it finds a variable in the specified sequence and false otherwise. x in y, here in results in a 1 if x is a member of sequence y.   not in\tEvaluates to true if it does not finds a variable in the specified sequence and false otherwise. x not in y, here not in results in a 1 if x is not a member of sequence y.    Python Identity Operators Identity operators compare the memory locations of two objects. It would be more clear if you know how variables work\n   Operator Description Example     is Evaluates to true if the variables on either side of the operator point to the same object and false otherwise. x is y, here is results in 1 if id(x) equals id(y).   is not Evaluates to false if the variables on either side of the operator point to the same object and true otherwise. x is not y, here is not results in 1 if id(x) is not equal to id(y).    Python Operators Precedence We used to know how the BODMAS works, and this is the BODMAS for programming. Highest to lowest.\n   Sr.No. Operator Description     1 ** Exponentiation (raise to the power)   2 ~ + - Complement, unary plus and minus (method names for the last two are +@ and -@)   3 * / % // Multiply, divide, modulo and floor division   4 + - Addition and subtraction   5 \u0026raquo; \u0026laquo; Right and left bitwise shift   6 \u0026amp; Bitwise \u0026lsquo;AND\u0026rsquo;   7 ^ | Bitwise exclusive OR' and regular OR\u0026rsquo;   8 \u0026lt;= \u0026lt; \u0026gt; \u0026gt;= Comparison operators   9 \u0026lt;\u0026gt; == != Equality operators   10 = %= /= //= -= += *= **= Assignment operators    11 is ,is not Identity operators   12 in, not, in Membership operators   13 not, or, and Logical operators    Decision Making Here we\u0026rsquo;re in a critical part, no logical program can made without these. go through one by one carefully. Depiction making logs down to checking TRUE or FALSE on a condition so if it\u0026rsquo;s true it can do something and if it\u0026rsquo;s false it can do something else.\nPython programming language provides following types of decision making statements\n   Sr.No. Statement Description     1 if statements An if statement consists of a boolean expression followed by one or more statements.   2 if\u0026hellip;else statements An if statement can be followed by an optional else statement, which executes when the boolean expression is FALSE.   3 nested if statements You can use one if or else if statement inside another if or else if statement(s).    Single Statement Suites you can create a if statement single lined. and here\u0026rsquo;s how you can do it\n  if(condition): \u0026lt;code to run if true\u0026gt;\r  For a practical statement\n  a = 10\rif( a != 9): print(\u0026quot;a Is not 9!\u0026quot;)\r  If statements remember python is a case sensitive programming language which means you have to be careful with capitals and simples, all of the python keywords are simple. keep it in mind.\n  if (expression):\r\u0026lt;statement\u0026gt;\r  This is the basic code for a if statement, did you notice that there is a whitespace (few spaces) after the if statement, that indicates that statement belongs to that if statement.\nfor a practical use\n  a = 10\rif (a == 10):\rprint(\u0026quot;A is 10\u0026quot;)\r  if\u0026hellip;else statement Now what can we do if the if statement is false? Here\u0026rsquo;s the solution for you. just use a else statement and It\u0026rsquo;ll run if the condition is false.\n  if (expression):\r\u0026lt;statement\u0026gt;\relse:\r\u0026lt;statement\u0026gt;\r  This is the boilerplate for if\u0026hellip;else statement, let\u0026rsquo;s consider a practical usage.\n  a = 9\rif (a == 10):\rprint(\u0026quot;A is 10\u0026quot;)\relse:\rprint(\u0026quot;A is not 9\u0026quot;)\r  Try for yourself and try to play with it.\nNested If statements Here you can set several if statements to run if the previous one is false. let me demonstrate.\n  if (expression):\r\u0026lt;statement\u0026gt;\relif (expression):\r\u0026lt;statement\u0026gt;\relse:\r\u0026lt;statement\u0026gt;\r  Now the elif checks the condition if the if statement gets false and if both are false, it would run else statement. You can add any number of elif statements in to your code. Let\u0026rsquo;s consider a practical usage.\n  a = 5\rif (a == 10):\rprint(\u0026quot;A is 10\u0026quot;)\relif (a == 9):\rprint(\u0026quot;A is 9\u0026quot;)\relif (a == 8):\rprint(\u0026quot;A is 8\u0026quot;)\relif (a == 7):\rprint(\u0026quot;A is 7\u0026quot;)\relse:\rprint(\u0026quot;A is something else!\u0026quot;)\r  Loops Well, here comes the fun part. we can run a code for a number of times without writing the same code over and over again, and That\u0026rsquo;s fun! There are several loop statements and loop control statements in python\n   Sr.No. Loop Type Description     1 while loop Repeats a statement or group of statements while a given condition is TRUE. It tests the condition before executing the loop body.   2 for loop Executes a sequence of statements multiple times and abbreviates the code that manages the loop variable.   3 nested loops You can use one or more loop inside any another while, for or do..while loop.    Loop control These are used in loops to alter their functionality, keep these in mind and next we\u0026rsquo;ll consider on how we can use these to our will.\n   Sr.No. Control Statement Description     1 break statement Terminates the loop statement and transfers execution to the statement immediately following the loop.   2 continue statement Causes the loop to skip the remainder of its body and immediately retest its condition prior to reiterating.   3 pass statement The pass statement in Python is used when a statement is required syntactically but you do not want any command or code to execute.    While loop As it claims, these loops are running until the provided expression stays true\n  while(expression):\r\u0026lt;statement\u0026gt;\r  Let\u0026rsquo;s consider a practical usage\n  a = 0\rwhile( a\u0026lt;10 ):\rprint(a)\ra += 1\r  This would print out the value of a until it passes 10. and then, the expression turns false and the loops breaks.\nFor loop for loop is executing through a sequence like a list or so.\nthe basic use case is like this,\n  for \u0026lt;variable\u0026gt; in \u0026lt;sequence\u0026gt;:\r\u0026lt;statement\u0026gt;\r  let\u0026rsquo;s consider a practical usage. Here, you can see a word is a sequence of letters, so we can use it.\n  for letter in 'HelloWorld':\rprint(letter)\r  Here you can see \u0026lsquo;letter\u0026rsquo; is the variable and \u0026lsquo;HelloWorld\u0026rsquo; is the sequence. this would print out all of the letters in the provided sequence.\n  a = [\u0026quot;hello world\u0026quot;,\u0026quot;nice world\u0026quot;,\u0026quot;rice bowl\u0026quot;,\u0026quot;remote control?\u0026quot;]\rfor i in a:\rprint(i)\r  Here, I used a variable called i and as the sequence I provided a list. and this code should loop through the list and print out everything in it one by one.\nNested loops Loops can be written inside other loops and that\u0026rsquo;s what nested loops are. This isn\u0026rsquo;t hard or something, just use a bit of logic and you\u0026rsquo;re good to go, let me show you some examples and you just have to know that you can do that.\n  a = [\u0026quot;First Time : \u0026quot;,\u0026quot;Second Time : \u0026quot;,\u0026quot;Third Time : \u0026quot;]\rb = [\u0026quot;a\u0026quot;,\u0026quot;e\u0026quot;,\u0026quot;i\u0026quot;,\u0026quot;o\u0026quot;,\u0026quot;u\u0026quot;]\rfor season in a:\rfor letter in b:\rprint(season + letter)\r  And the output should be\n  First Time : a\rFirst Time : e\rFirst Time : i\rFirst Time : o\rFirst Time : u\rSecond Time : a\rSecond Time : e\rSecond Time : i\rSecond Time : o\rSecond Time : u\rThird Time : a\rThird Time : e\rThird Time : i\rThird Time : o\rThird Time : u\r  Using loop controls Using loop controls isn\u0026rsquo;t that hard, let me demonstrate you how they work.\n  b = [\u0026quot;a\u0026quot;,\u0026quot;e\u0026quot;,\u0026quot;i\u0026quot;,\u0026quot;o\u0026quot;,\u0026quot;u\u0026quot;]\rfor letter in b:\rif( b == \u0026quot;i\u0026quot;):\rbreak\rprint(season + letter)\r  Here, only a and e would be printed, whenever it comes to i, the loop breaks with the break command\n  b = [\u0026quot;a\u0026quot;,\u0026quot;e\u0026quot;,\u0026quot;i\u0026quot;,\u0026quot;o\u0026quot;,\u0026quot;u\u0026quot;]\rfor letter in b:\rif( b == \u0026quot;i\u0026quot;):\rcontinue\rprint(season + letter)\r  Here, everything except for i would be printed, whenever it comes to i, the loop skips the rest of the code and starts again with the continue command\npass statement is somewhat different\n  b = [\u0026quot;a\u0026quot;,\u0026quot;e\u0026quot;,\u0026quot;i\u0026quot;,\u0026quot;o\u0026quot;,\u0026quot;u\u0026quot;]\rfor letter in b:\rif( b == \u0026quot;i\u0026quot;):\rpass\rprint(season + letter)\r  After running this, you won\u0026rsquo;t be able to see any difference as the pass command wasn\u0026rsquo;t there. and that\u0026rsquo;s exactly it. pass command does nothing. it just holds a place and maybe it\u0026rsquo;ll help to debug the code.\nNumber Functions What are these for? well, these are for atypical calculations, I won\u0026rsquo;t explain these in details because if you don\u0026rsquo;t know the functions in real-life-maths, you don\u0026rsquo;t want to use them here either. If you know these from real-life-maths, you know what to do.\nMathematical Functions plug in a value or a variable in the place of x and you\u0026rsquo;re pretty much done with it.\n   Sr.No. Function \u0026amp; Returns description     1 abs(x) The absolute value of x: the (positive) distance between x and zero.   2 ceil(x) The ceiling of x: the smallest integer not less than x   3 cmp(x, y) -1 if x \u0026lt; y, 0 if x == y, or 1 if x \u0026gt; y   4 exp(x) The exponential of x: ex   5 fabs(x) The absolute value of x.   6 floor(x) The floor of x: the largest integer not greater than x   7 log(x) The natural logarithm of x, for x\u0026gt; 0   8 log10(x) The base-10 logarithm of x for x\u0026gt; 0.   9 max(x1, x2,\u0026hellip;) The largest of its arguments: the value closest to positive infinity   10 min(x1, x2,\u0026hellip;) The smallest of its arguments: the value closest to negative infinity   11 modf(x) The fractional and integer parts of x in a two-item tuple. Both parts have the same sign as x. The integer part is returned as a float.   12 pow(x, y) The value of x**y.   13 round(x [,n]) x rounded to n digits from the decimal point. Python rounds away from zero as a tie-breaker: round(0.5) is 1.0 and round(-0.5) is -1.0.   14 sqrt(x) The square root of x for x \u0026gt; 0    Random Number Functions Random numbers are used for games, simulations, testing, security, and privacy applications. Python includes following functions that are commonly used.\n   Sr.No. Function Description     1 choice(seq) A random item from a list, tuple, or string.   2 randrange ([start,] stop [,step]) A randomly selected element from range(start, stop, step)   3 random() A random float r, such that 0 is less than or equal to r and r is less than 1   4 seed([x]) Sets the integer starting value used in generating random numbers. Call this function before calling any other random module function. Returns None.   5 shuffle(lst) Randomizes the items of a list in place. Returns None.   6 uniform(x, y) A random float r, such that x is less than or equal to r and r is less than y    Trigonometric Functions Python includes following functions that perform trigonometric calculations.\n   Sr.No. Function Description     1 acos(x) Return the arc cosine of x, in radians.   2 asin(x) Return the arc sine of x, in radians.   3 atan(x) Return the arc tangent of x, in radians.   4 atan2(y, x) Return atan(y / x), in radians.   5 cos(x) Return the cosine of x radians.   6 hypot(x, y) Return the Euclidean norm, sqrt(xx + yy).   7 sin(x) Return the sine of x radians.   8 tan(x) Return the tangent of x radians.   9 degrees(x) Converts angle x from radians to degrees.   10 radians(x) Converts angle x from degrees to radians.    Mathematical Constants Just our atypical mathematical constants, these can be used as numbers.\n   Sr.No. Constants Description     1 pi The mathematical constant pi.   2 e The mathematical constant e.    String Functions Here, we considering what kinds of things we can do with python strings. In other words, String processing In Python.\nHere you have to keep in mind that strings are a sequence of letters. so we can process them as like lists and tuples.\nAccessing Values in Strings Python does not support a character type; these are treated as strings of length one, thus also considered a substring. To access substrings, use the square brackets for slicing along with the index or indices to obtain your substring. For example\n  var1 = 'Hello World!'\rvar2 = \u0026quot;Python Programming\u0026quot;\rprint (\u0026quot;var1[0]: \u0026quot;, var1[0])\rprint (\u0026quot;var2[1:5]: \u0026quot;, var2[1:5])\r  Escape Characters These are some special characters which you can use in strings. they are called escape characters. for an example you can add a escape character to print a single line paragraph as a multiline paragraph.\n   Backslash notation Hexadecimal character Description     \\a 0x07 Bell or alert   \\b 0x08 Backspace   \\cx  Control-x   \\C-x  Control-x   \\e 0x1b Escape   \\f 0x0c Formfeed   \\M-\\C-x  Meta-Control-x   \\n 0x0a Newline   \\nnn  Octal notation, where n is in the range 0.7   \\r 0x0d Carriage return   \\s 0x20 Space   \\t 0x09 Tab   \\v 0x0b Vertical tab   \\x  Character x   \\xnn  Hexadecimal notation, where n is in the range 0.9, a.f, or A.F    String Special Operators These operators can be used to process certain paragraphs.\n   Operator Description Example     + Concatenation - Adds values on either side of the operator a + b will give HelloPython   * Repetition - Creates new strings, concatenating multiple copies of the same string a*2 will give -HelloHello   [] Slice - Gives the character from the given index a[1] will give e   [ : ] Range Slice - Gives the characters from the given range a[1:4] will give ell   in Membership - Returns true if a character exists in the given string H in a will give 1   not in Membership - Returns true if a character does not exist in the given string M not in a will give 1   r/R Raw String - Suppresses actual meaning of Escape characters. The syntax for raw strings is exactly the same as for normal strings with the exception of the raw string operator, the letter \u0026ldquo;r,\u0026rdquo; which precedes the quotation marks. The \u0026ldquo;r\u0026rdquo; can be lowercase (r) or uppercase (R) and must be placed immediately preceding the first quote mark. print r\u0026rsquo;\\n\u0026rsquo; prints \\n and print R\u0026rsquo;\\n\u0026rsquo;prints \\n   % Format - Performs String formatting See at next section    String Formatting Operator These can be used to add certain values to a pre formatted string. It\u0026rsquo;ll make sense in the future when you work with these, until then Let\u0026rsquo;s explore.\n   Format Symbol Conversion     %c character   %s string conversion via str() prior to formatting   %i signed decimal integer   %d signed decimal integer   %u unsigned decimal integer   %o octal integer   %x hexadecimal integer (lowercase letters)   %X hexadecimal integer (UPPERcase letters)   %e exponential notation (with lowercase \u0026lsquo;e\u0026rsquo;)   %E exponential notation (with UPPERcase \u0026lsquo;E\u0026rsquo;)   %f floating point real number   %g the shorter of %f and %e   %G the shorter of %f and %E    Now for an example, let\u0026rsquo;s try an example\n  a = \u0026quot;Jhon Doe\u0026quot;\rb = \u0026quot;The World War 3\u0026quot;\rc = 56.5\rprint(\u0026quot;Hello Mr.%s, This is your book %s which cost you $%g and I Hope you have a nice weekend.\u0026quot; % (a, b, c))\r  Other supported symbols and functionality are listed in the following table\n   Symbol Functionality     * argument specifies width or precision   - left justification   + display the sign    leave a blank space before a positive number   # add the octal leading zero ( \u0026lsquo;0\u0026rsquo; ) or hexadecimal leading \u0026lsquo;0x\u0026rsquo; or \u0026lsquo;0X\u0026rsquo;, depending on whether \u0026lsquo;x\u0026rsquo; or \u0026lsquo;X\u0026rsquo;   0 pad from left with zeros (instead of spaces)   % \u0026lsquo;%%\u0026rsquo; leaves you with a single literal \u0026lsquo;%\u0026rsquo;   (var) mapping variable (dictionary arguments)   m.n. m is the minimum total width and n is the number of digits to display after the decimal point (if appl.)    Built-in String Methods These functions can be used in order to preform string functions, and process strings in our needs. We\u0026rsquo;ll get hang of these later.\n   Sr.No. Methods Description     1 capitalize() Capitalizes first letter of string   2 center(width, fillchar) Returns a space-padded string with the original string centered to a total of width columns.   3 count(str, beg= 0,end=len(string)) Counts how many times str occurs in string or in a substring of string if starting index beg and ending index end are given.   4 decode(encoding='UTF-8\u0026rsquo;,errors='strict\u0026rsquo;) Decodes the string using the codec registered for encoding. encoding defaults to the default string encoding.   5 encode(encoding='UTF-8\u0026rsquo;,errors='strict\u0026rsquo;) Returns encoded string version of string; on error, default is to raise a ValueError unless errors is given with \u0026lsquo;ignore\u0026rsquo; or \u0026lsquo;replace\u0026rsquo;.   6 endswith(suffix, beg=0, end=len(string)) Determines if string or a substring of string (if starting index beg and ending index end are given) ends with suffix; returns true if so and false otherwise.   7 expandtabs(tabsize=8) Expands tabs in string to multiple spaces; defaults to 8 spaces per tab if tabsize not provided.   8 find(str, beg=0 end=len(string)) Determine if str occurs in string or in a substring of string if starting index beg and ending index end are given returns index if found and -1 otherwise.   9 index(str, beg=0, end=len(string)) Same as find(), but raises an exception if str not found.   10 isalnum() Returns true if string has at least 1 character and all characters are alphanumeric and false otherwise.   11 isalpha() Returns true if string has at least 1 character and all characters are alphabetic and false otherwise.   12 isdigit() Returns true if string contains only digits and false otherwise.   13 islower() Returns true if string has at least 1 cased character and all cased characters are in lowercase and false otherwise.   14 isnumeric() Returns true if a unicode string contains only numeric characters and false otherwise.   15 isspace() Returns true if string contains only whitespace characters and false otherwise.   16 istitle() Returns true if string is properly \u0026ldquo;titlecased\u0026rdquo; and false otherwise.   17 isupper() Returns true if string has at least one cased character and all cased characters are in uppercase and false otherwise.   18 join(seq) Merges (concatenates) the string representations of elements in sequence seq into a string, with separator string.   19 len(string) Returns the length of the string   20 ljust(width[, fillchar]) Returns a space-padded string with the original string left-justified to a total of width columns.   21 lower() Converts all uppercase letters in string to lowercase.   22 lstrip() Removes all leading whitespace in string.   23 maketrans() Returns a translation table to be used in translate function.   24 max(str) Returns the max alphabetical character from the string str.   25 min(str) Returns the min alphabetical character from the string str.   26 replace(old, new [, max]) Replaces all occurrences of old in string with new or at most max occurrences if max given.   27 rfind(str, beg=0,end=len(string)) Same as find(), but search backwards in string.   28 rindex( str, beg=0, end=len(string)) Same as index(), but search backwards in string.   29 rjust(width,[, fillchar]) Returns a space-padded string with the original string right-justified to a total of width columns.   30 rstrip() Removes all trailing whitespace of string.   31 split(str=\u0026rdquo;\u0026rdquo;, num=string.count(str)) Splits string according to delimiter str (space if not provided) and returns list of substrings; split into at most num substrings if given.   32 splitlines( num=string.count('\\n\u0026rsquo;)) Splits string at all (or num) NEWLINEs and returns a list of each line with NEWLINEs removed.   33 startswith(str, beg=0,end=len(string)) Determines if string or a substring of string (if starting index beg and ending index end are given) starts with substring str; returns true if so and false otherwise.   34 strip([chars]) Performs both lstrip() and rstrip() on string.   35 swapcase() Inverts case for all letters in string.   36 title() Returns \u0026ldquo;titlecased\u0026rdquo; version of string, that is, all words begin with uppercase and the rest are lowercase.   37 translate(table, deletechars=\u0026rdquo;\u0026quot;) Translates string according to translation table str(256 chars), removing those in the del string.   38 upper() Converts lowercase letters in string to uppercase.   39 zfill (width) Returns original string leftpadded with zeros to a total of width characters; intended for numbers, zfill() retains any sign given (less one zero).   40 isdecimal() Returns true if a unicode string contains only decimal characters and false otherwise.    List Functions Assigning and accessing lists As we did before, assigning lists isn\u0026rsquo;t that hard. just add a list of data separated by commas and enclosed with square brackets. for an example\n  a = [10,20,50,60,\u0026quot;Fun\u0026quot;,\u0026quot;Bun,\u0026quot;Run\u0026quot;]\r  And That\u0026rsquo;s it. the indexing of programming is starting with 0. so you can access it\u0026rsquo;s value using\n  \u0026lt;variable\u0026gt;[\u0026lt;index\u0026gt;]\r  For an example\n  a = [10,20,50,60,\u0026quot;Fun\u0026quot;,\u0026quot;Bun,\u0026quot;Run\u0026quot;]\rprint(a[0])\r  and you\u0026rsquo;ll get the first item. to get items from 3 to 5\n  a = [10,20,50,60,\u0026quot;Fun\u0026quot;,\u0026quot;Bun,\u0026quot;Run\u0026quot;]\rprint(a[2:5])\r  Updating and Deleting Lists You can change or delete values of a list using Index of that item\n  a = [10,20,50,60,\u0026quot;Fun\u0026quot;,\u0026quot;Bun,\u0026quot;Run\u0026quot;]\ra[0] = 65\rdel a[2]\rprint(a)\r  Basic List Operations You can use these operators for process lists in python.\n   Python Expression Results Description     len([1, 2, 3]) 3 Length   [1, 2, 3] + [4, 5, 6] [1, 2, 3, 4, 5, 6] Concatenation   [\u0026lsquo;Hi!'] * 4 [\u0026lsquo;Hi!\u0026rsquo;, \u0026lsquo;Hi!\u0026rsquo;, \u0026lsquo;Hi!\u0026rsquo;, \u0026lsquo;Hi!'] Repetition   3 in [1, 2, 3] True Membership   for x in [1, 2, 3]: print x, 1 2 3 Iteration    Indexing, Slicing, and Matrixes Just listing what we did above\n  L = ['spam', 'Spam', 'SPAM!']\r     Python Expression Results Description     L[2] SPAM! Offsets start at zero   L[-2] Spam Negative: count from the right   L[1:] [\u0026lsquo;Spam\u0026rsquo;, \u0026lsquo;SPAM!'] Slicing fetches sections    Built-in List Functions \u0026amp; Methods Python includes the following list functions −\n   Sr.No. Function Description     1 cmp(list1, list2) Compares elements of both lists.   2 len(list) Gives the total length of the list.   3 max(list) Returns item from the list with max value.   4 min(list) Returns item from the list with min value.   5 list(seq) Converts a tuple into list.    Python includes following list methods\n   Sr.No. Methods Description     1 list.append(obj) Appends object obj to list   2 list.count(obj) Returns count of how many times obj occurs in list   3 list.extend(seq) Appends the contents of seq to list   4 list.index(obj) Returns the lowest index in list that obj appears   5 list.insert(index, obj) Inserts object obj into list at offset index   6 list.pop(obj=list[-1]) Removes and returns last object or obj from list   7 list.remove(obj) Removes object obj from list   8 list.reverse() Reverses objects of list in place   9 list.sort([func]) Sorts objects of list, use compare func if given    Tuples A tuple is a collection of objects which ordered and immutable. Tuples are sequences, just like lists. The differences between tuples and lists are, the tuples cannot be changed unlike lists and tuples use parentheses, whereas lists use square brackets.\nAssigning and Accessing Values Let\u0026rsquo;s do some work with these\n  a = (10,20,50,60,\u0026quot;Fun\u0026quot;,\u0026quot;Bun,\u0026quot;Run\u0026quot;)\r  And That\u0026rsquo;s it. the indexing of programming is starting with 0. so you can access it\u0026rsquo;s value using\n  \u0026lt;variable\u0026gt;(\u0026lt;index\u0026gt;)\r  For an example\n  a = (10,20,50,60,\u0026quot;Fun\u0026quot;,\u0026quot;Bun,\u0026quot;Run\u0026quot;)\rprint(a[0])\r  and you\u0026rsquo;ll get the first item. to get items from 3 to 5\n  a = (10,20,50,60,\u0026quot;Fun\u0026quot;,\u0026quot;Bun,\u0026quot;Run\u0026quot;)\rprint(a[2:5])\r  Basic Tuples Operations Tuples respond to the + and * operators much like strings; they mean concatenation and repetition here too, except that the result is a new tuple, not a string.\n   Python Expression Results Description     len((1, 2, 3)) 3 Length   (1, 2, 3) + (4, 5, 6) (1, 2, 3, 4, 5, 6) Concatenation   (\u0026lsquo;Hi!\u0026rsquo;,) * 4 (\u0026lsquo;Hi!\u0026rsquo;, \u0026lsquo;Hi!\u0026rsquo;, \u0026lsquo;Hi!\u0026rsquo;, \u0026lsquo;Hi!') Repetition   3 in (1, 2, 3) True Membership   for x in (1, 2, 3): print x, 1 2 3 Iteration    Indexing, Slicing, and Matrixes It\u0026rsquo;s the same as the lists. but for tuples.\n  L = ('spam', 'Spam', 'SPAM!')\r     Python Expression Results Description     L[2] SPAM! Offsets start at zero   L[-2] Spam Negative: count from the right   L[1:] [\u0026lsquo;Spam\u0026rsquo;, \u0026lsquo;SPAM!'] Slicing fetches sections    Built-in Tuple Functions Python includes the following tuple functions −\n   Sr.No. Function Description     1 cmp(tuple1, tuple2) Compares elements of both tuples.   2 len(tuple) Gives the total length of the tuple.   3 max(tuple) Returns item from the tuple with max value.   4 min(tuple) Returns item from the tuple with min value.   5 tuple(seq) Converts a list into tuple.    Dictionaries Python dictionaries are a dataset that has a key value pair, and that duo helps so much. Let\u0026rsquo;s start with dictionaries.\nAssigning, Updating and Deleting dictionaries we can create a dictionary using\n  \u0026lt;variable\u0026gt; = {\u0026lt;string\u0026gt;:\u0026lt;string\u0026gt;,...}\r  for a real section.\n  dic = {\u0026quot;key1\u0026quot;:\u0026quot;value1\u0026quot;,\u0026quot;key2\u0026quot;:\u0026quot;value2\u0026quot;,\u0026quot;key3\u0026quot;:\u0026quot;value3\u0026quot;,\u0026quot;key4\u0026quot;:\u0026quot;value4\u0026quot;}\r  and we can update dictionaries as this\n  dic[\u0026quot;key2\u0026quot;]=\u0026quot;ChangedValue2\u0026quot;\r  Adding new entries\n  dic[\u0026quot;key5\u0026quot;]=\u0026quot;newValue5\u0026quot;\r  Accessing Values\n  print(dic[\u0026quot;key1\u0026quot;])\r  printing the whole Dictionary\n  print(dic)\r  Deleting dictionary elements\n  del dic[\u0026quot;key3\u0026quot;]\r  You can Clear the whole Dictionary\n  dic.clear()\r  Delete the whole dictionary\n  del dic\r  Built-in Dictionary Functions \u0026amp; Methods Python includes the following dictionary functions\n   Sr.No. Function Description     1 cmp(dict1, dict2) Compares elements of both dict.   2 len(dict) Gives the total length of the dictionary. This would be equal to the number of items in the dictionary.   3 str(dict) Produces a printable string representation of a dictionary   4 type(variable) Returns the type of the passed variable. If passed variable is dictionary, then it would return a dictionary type.    Python includes following dictionary methods\n   Sr.No. Methods Description     1 dict.clear() Removes all elements of dictionary dict   2 dict.copy() Returns a shallow copy of dictionary dict   3 dict.fromkeys() Create a new dictionary with keys from seq and values set to value.   4 dict.get(key, default=None) For key key, returns value or default if key not in dictionary   5 dict.has_key(key) Returns true if key in dictionary dict, false otherwise   6 dict.items() Returns a list of dict\u0026rsquo;s (key, value) tuple pairs   7 dict.keys() Returns list of dictionary dict\u0026rsquo;s keys   8 dict.setdefault(key, default=None) Similar to get(), but will set dict[key]=default if key is not already in dict   9 dict.update(dict2) Adds dictionary dict2\u0026rsquo;s key-values pairs to dict   10 dict.values() Returns list of dictionary dict\u0026rsquo;s values    Date \u0026amp; Time Here\u0026rsquo;s another fun time to enjoy with python. The guide is getting longer and boring I know, but this is a complete guide so this could get much worse. \u0026lsquo;Boring\u0026rsquo; is not for the masters so lets delete it ;D\nNow now no, what is this about. let me show you, python date and time operations are all about, you guessed it, date and time. we can get the current date and time in many many formats and also we can process older dates too.\nWhat is Tick? Time intervals are floating-point numbers in units of seconds. Particular instants in time are expressed in seconds since 12:00am, January 1, 1970(epoch). this is common for all main-stream programming languages and we have to deal with it.\nThe function time.time() returns the current system time in ticks since 12:00am, January 1, 1970(epoch). Use a print command to check it\nfirst we have to import the time library, then we can proceed.\n  import time\rprint(time.time())\r  and You\u0026rsquo;ll get some numbers.\nWhat is TimeTuple? This is getting much interesting now, let\u0026rsquo;s talk about time tuple. Here, Many of Python\u0026rsquo;s time functions handle time as a tuple of 9 numbers, as shown below\n   Index Field Values     0 4-digit year 2008   1 Month 1 to 12   2 Day 1 to 31   3 Hour 0 to 23   4 Minute 0 to 59   5 Second 0 to 61 (60 or 61 are leap-seconds)   6 Day of Week 0 to 6 (0 is Monday)   7 Day of year 1 to 366 (Julian day)   8 Daylight savings -1, 0, 1, -1 means library determines DST    Now you should pretty much comfortable with tuples aren\u0026rsquo;t you? so I Don\u0026rsquo;t think this is something hard for you to figure out. in case you didn\u0026rsquo;t let me show you how to retrieve these digits.\nThe above tuple is equivalent to struct_time structure. This structure has following attributes\n   Index Attributes Values     0 tm_year 2008   1 tm_mon 1 to 12   2 tm_mday 1 to 31   3 tm_hour 0 to 23   4 tm_min 0 to 59   5 tm_sec 0 to 61 (60 or 61 are leap-seconds)   6 tm_wday 0 to 6 (0 is Monday)   7 tm_yday 1 to 366 (Julian day)   8 tm_isdst -1, 0, 1, -1 means library determines DST    Working with Dates and Times Let\u0026rsquo;s get down to the coding section. Here I\u0026rsquo;ll show how to do the codings for some and you can figure out the rest for sure.\n  import time\rlocaltime = time.localtime(time.time())\rprint(localtime)\r  And you\u0026rsquo;ll get something like this.\n time.struct_time(tm_year=2020, tm_mon=7, tm_mday=15, tm_hour=17, tm_min=27, tm_sec=19, tm_wday=2, tm_yday=197, tm_isdst=0)\r  Explaining the whole time.struct_time tuple. So let\u0026rsquo;s deal with this now. I\u0026rsquo;m refering to the chart above and let\u0026rsquo;s print out some dates.\n  import time\rYear = time.localtime(time.time())[0]\rMonth = time.localtime(time.time())[1]\rDay = time.localtime(time.time())[2]\rHour = time.localtime(time.time())[3]\rMinuites = time.localtime(time.time())[4]\rSeconds = time.localtime(time.time())[5]\rprint(\u0026quot;Today is %g/%g/%g and the time is %g:%g:%g \u0026quot; % (Day,Month,Year,Hour,Minuites,Seconds))\r  And The result will be\n  Today is 15/7/2020 and the time is 17:32:50\r  Something like this. This is my time period. And that\u0026rsquo;s pretty much it for date and time.. Moving on.\nFunctions Let\u0026rsquo;s speak about functions. These are the most important code sections of any programing language. The reason why is functions functionality, That\u0026rsquo;s awkward to say but any how. Functions store some code in them and we can run that code section anytime we call a function. It could be a calculation or anything like that. And also we can pass values in variables so the function can preform more things dynamically.\nDefining Functions That\u0026rsquo;s not hard at all, but first let me tell you something, most of the developer guides start with basic functions when teaching functions, but that\u0026rsquo;s not my way so let\u0026rsquo;s dig deeper with a huge step forward. This is the boilerplate for functions.\n  def \u0026lt;function-name\u0026gt;(\u0026lt;variables-to-pass\u0026gt;):\r\u0026lt;statements\u0026gt;\r  And That\u0026rsquo;s it you\u0026rsquo;re a master of functions. but that\u0026rsquo;s too little? yeah that\u0026rsquo;s the hardest part. now let\u0026rsquo;s explore a practical use case but first let me explain.\n def is the keyword to define functions \u0026lt; function-name \u0026gt; is where you put your function\u0026rsquo;s name to call it with, start it with a simple (lowercase) letter and don\u0026rsquo;t add spaces (It\u0026rsquo;s an identifier) \u0026lt; variables-to-pass \u0026gt; can have several or infinite variables that we have to pass values to when we\u0026rsquo;re calling the function \u0026lt; statements \u0026gt; Is where the code goes  Now here\u0026rsquo;s an example for you\n  def printagreeting(name,age):\rstatement = \u0026quot;Hello There %s, \u0026quot; % (name)\rif (age \u0026lt; 18):\rstatement += \u0026quot;You're %g aren't you cuty pie\u0026quot; % (age)\relif (age \u0026lt; 50):\rstatement += \u0026quot;You're %g and It's an age full of responsibities\u0026quot; % (age)\relse:\rstatement += \u0026quot;You're an Old Man!\u0026quot;\rprint(statement)\r  Now It\u0026rsquo;s done defining. Let\u0026rsquo;s call and see how it works.\nCalling Functions For calling a function, you have to address it with the name it made followed by brackets and in those brackets, variables to pass. here we have two variables to pass, name and age. You can create functions without variables but you have to put brackets anyways something like\n  example()\r  or\n  \u0026lt;function-name\u0026gt;(\u0026lt;values\u0026gt;)\r  let\u0026rsquo;s call our function we just made.\n  printagreeting(\u0026quot;Tecinpact\u0026quot;,22)\r  That\u0026rsquo;s how you call it, and this should be printed out after that.\n  Hello There Tecinpact, You're 22 and It's an age full of responsibities\r  return value from a function This is something important and this makes the function behaves in a way that\u0026rsquo;s different from the above example. return makes the function returns a value so we can assign them in to a variable.\nYou can do anything with functions, and remember these make our lives easier than ever.\n  def printagreeting(name,age):\rstatement = \u0026quot;Hello There %s, \u0026quot; % (name)\rif (age \u0026lt; 18):\rstatement += \u0026quot;You're %g aren't you cuty pie\u0026quot; % (age)\relif (age \u0026lt; 50):\rstatement += \u0026quot;You're %g and It's an age full of responsibities\u0026quot; % (age)\relse:\rstatement += \u0026quot;You're an Old Man!\u0026quot;\rreturn(statement)\r  did you noticed that I switched that print to a return? So now I can use the function as this.\n  returnedvalue = printagreeting(\u0026quot;Tecinpact\u0026quot;,22)\r  and the function now assigns the value to the returnedvalue variable. so we can use it in the program for something else than printing to the console.\nReading data from user in the console This is a short and simple but a compulsory part on programming, that\u0026rsquo;s the user\u0026rsquo;s input. so we can ask the user for inputs when the code running using raw_input method. Try this example to understand the capabilities.\n  str = raw_input(\u0026quot;Enter your input: \u0026quot;)\rprint (\u0026quot;Received input is : %s\u0026quot;, % (str))\r  This is short and sweet so you can see it for your self.\nFiles I/O Here we came to a part where we can write to files using python. If you\u0026rsquo;re imaginative inough, you can even automate writing codes from other languages using the knowledge you gathered from this article. Let\u0026rsquo;s start. Here, I\u0026rsquo;m only explaining what you really need, and nothing else.\nConcept is simple, you have to open a file, read or write, then you can close it.\nOpening and Closing Files Simple as it seems, Python has a open and close function to do it, but opening is a bit different, you can use python to open in various modes, but one\u0026rsquo;s you\u0026rsquo;re really want it\n r - for read only w - read and write but overwrites existing data a - for appending new lines.  Here\u0026rsquo;s the complete list if you are interested in it.\n   Sr.No. Modes Description     1 r Opens a file for reading only. The file pointer is placed at the beginning of the file. This is the default mode.   2 rb Opens a file for reading only in binary format. The file pointer is placed at the beginning of the file. This is the default mode.   3 r+ Opens a file for both reading and writing. The file pointer placed at the beginning of the file.   4 rb+ Opens a file for both reading and writing in binary format. The file pointer placed at the beginning of the file.   5 w Opens a file for writing only. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.   6 wb Opens a file for writing only in binary format. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.   7 w+ Opens a file for both writing and reading. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing.   8 wb+ Opens a file for both writing and reading in binary format. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing.   9 a Opens a file for appending. The file pointer is at the end of the file if the file exists. That is, the file is in the append mode. If the file does not exist, it creates a new file for writing.   10 ab Opens a file for appending in binary format. The file pointer is at the end of the file if the file exists. That is, the file is in the append mode. If the file does not exist, it creates a new file for writing.   11 a+ Opens a file for both appending and reading. The file pointer is at the end of the file if the file exists. The file opens in the append mode. If the file does not exist, it creates a new file for reading and writing.   12 ab+ Opens a file for both appending and reading in binary format. The file pointer is at the end of the file if the file exists. The file opens in the append mode. If the file does not exist, it creates a new file for reading and writing.    The file Object Attributes What are these? These are what you can do with these files. So, Let\u0026rsquo;s Explore.\n   Sr.No. Attribute Description     1 file.closed Returns true if file is closed, false otherwise.   2 file.mode Returns access mode with which file was opened.   3 file.name Returns name of the file.   4 file.softspace Returns false if space explicitly required with print, true otherwise.    Let\u0026rsquo;s write some files then.\nWrite the file Let\u0026rsquo;s open a file using read and write with overwriting in the directory of the script.\n  file = open(\u0026quot;thisIsAFile.txt\u0026quot;, \u0026quot;w\u0026quot;)\r  Now let\u0026rsquo;s write some data to it.\n  file.write( \u0026quot;Hello World! This is a file written without a hand.\u0026quot;)\r  Let\u0026rsquo;s close it now.\n  file.close()\r  Let\u0026rsquo;s read the file now,\nRead the file   file = open(\u0026quot;thisIsAFile.txt\u0026quot;, \u0026quot;r\u0026quot;)\rfileText = file.read()\rprint(fileText)\rfile.close()\r  now the fileText variable holds what\u0026rsquo;s inside the file.\nRename the file It\u0026rsquo;s Simple and straight forward. You have to import the os module first.\n  import os\ros.rename(\u0026lt;current_file_name\u0026gt;, \u0026lt;new_file_name\u0026gt;)\r  Let\u0026rsquo;s nome our file to another name\n  import os\ros.rename(\u0026quot;thisIsAFile.txt\u0026quot;,\u0026quot;anotherfile.txt\u0026quot;)\r  Let\u0026rsquo;s Delete the file This is also a funtion of the os module so first we have to import it and then we can proceed\n  import os\ros.remove(\u0026quot;thisIsAFile.txt\u0026quot;)\r  Let\u0026rsquo;s explore some OS module functions which will get in handy    Module Description Usage     os.mkdir() You can use the mkdir() method of the os module to create directories in the current directory. os.mkdir(\u0026ldquo;newdir\u0026rdquo;)   os.chdir() You can use the chdir() method to change the current directory. os.chdir(\u0026ldquo;newdir\u0026rdquo;)   os.getcwd() The getcwd() method displays the current working directory. os.getcwd()   os.rmdir() The rmdir() method deletes the directory, which is passed as an argument in the method. os.rmdir(\u0026lsquo;dirname\u0026rsquo;)    And You\u0026rsquo;re Golden with File I/O\nError handling In programming, we run into all sorts of errors eventually, so we need a fool proof option to make the program run no matter what. So there\u0026rsquo;s a simple boilerplate we can use\n  try:\rYou do your operations here.\rexcept:\rIf there is any exception, then execute this block.\relse:\rIf there is no exception then execute this block.\rfinally:\rThis would run always after everything above\r  Let\u0026rsquo;s explore\nYou can add a try block and add you code in that, so if something went wrong it would brake the program there and run the except block. If there are no errors or so the else block will run, and finally block would always run it\u0026rsquo;s code. you can ditch anything else the try block so it\u0026rsquo;s something you can tailor to your needs.\nObject Oriented Python This would be the final topic I\u0026rsquo;m covering in this series. This is a huge topic but I\u0026rsquo;m explaining briefly.\nClasses are something like functions but they can have their own objects. for an example consider a class in a school, we\u0026rsquo;ll assume that there is a class called \u0026ldquo;grade 2\u0026rdquo; whenever the headmaster says \u0026ldquo;come here g2\u0026rdquo; the grade 2 students have to stand up and say \u0026ldquo;I\u0026rsquo;m here\u0026rdquo;. this is a imaginative exercise, so considering this case, the headmaster once gathered the whole school and said loudly, \u0026ldquo;Come here g2\u0026rdquo; and all of the grade 2 students said \u0026ldquo;I\u0026rsquo;m here\u0026rdquo;. now this is a idiotic but a powerful story, no the moral of the story: class grade 2 is like the classes in python, they have certain functions to run whenever they were called, and the students of that class are like Objects in python. those objects has to obey and follow the class rules until they are in that class. and that\u0026rsquo;s the main concept.\nDefining classes it\u0026rsquo;s easy, you just have to use the class keyword followed by the class name and the code block\n  class \u0026lt;class-name\u0026gt;:\rdef __init__(self,\u0026lt;variables\u0026gt;):\r\u0026lt;initialization-code\u0026gt;\r\u0026lt;other-codes\u0026gt;\r  That init function in compulsory and this is where you write your initialization code of a class. let\u0026rsquo;s dig deeper with an example with everything. I made this guide all by my self for you guys to make it easy to understand everything if you followed it correctly, if you have troubles even after this tutorial, follow it again with proper attention. If you got stucked, just contact me.\nnow let\u0026rsquo;s do something with it, I\u0026rsquo;m covering everything basic and you\u0026rsquo;re imagination is the sky here.\nLet\u0026rsquo;s make a class for an animal clinic, it contains a class for dogs and cats, every animal that brings there must have an object of their own. someone brought there 2 dogs Saly and Mary also with 2 cats Pipi and Popo, mary had two injections previously.\nLet\u0026rsquo;s create a class forthem with a function to bark and meaw so we can make them bark and meaw anytime we want, also lets add another function to give them an Injection. Follow my code and most of them, you\u0026rsquo;ll understand, I\u0026rsquo;ll explain the basics and the hard parts, from this, you\u0026rsquo;ll get to know how to create and ingerit classes with objects, how to call functions and store values for objects.\n  class dog:\rdef __init__(self, name, age, injections=0):\rself.name = name\rself.age = age\rself.injections = injections\rdef bark(self):\rprint(\u0026quot;Woof Woof\u0026quot;)\rdef inject(self, times):\rprint(\u0026quot;%s Injected %g times\u0026quot; % (self.name, times))\rself.injections += times class cat:\rdef __init__(self, name, age, injections=0):\rself.name = name\rself.age = age\rself.injections = injections\rdef meaw(self):\rprint(\u0026quot;meaw meaw\u0026quot;)\rdef inject(self, times):\rprint(\u0026quot;%s Injected %g times\u0026quot; % (self.name, times))\rself.injections += times Saly = dog(\u0026quot;Saly\u0026quot;, 2)\rMary = dog(\u0026quot;Mary\u0026quot;, 3, 2)\rPipi = cat(\u0026quot;Pipi\u0026quot;, 1)\rPopo = cat(\u0026quot;Popo\u0026quot;, 5)\rSaly.bark()\rMary.inject(2)\rPipi.inject(1)\rPopo.meaw()\ranimals = [Saly, Mary, Pipi, Popo]\rfor pet in animals:\rprint(\u0026quot;Name : \u0026quot;, pet.name)\rprint(\u0026quot;age : \u0026quot;, pet.age)\rprint(\u0026quot;injections : \u0026quot;, pet.injections)\r  Now this is a greate example on how classes and objects work, if you don\u0026rsquo;t get it, I don\u0026rsquo;t know what will, But, It\u0026rsquo;s harder for beginners to get thesee concepts in their minds, so try and try. Let me explain What\u0026rsquo;s going on here first.\nFirst I made two classes with for cats and dogs. I\u0026rsquo;ll explain from the begining, first I defined the class and defined it\u0026rsquo;s first funciton __ init __ to initialize the class, that first argument self is must be there in every funcion you define in a class (you can see it). and I added extra 3 variables, name age and injections. I did something strange here, injection=0 adds a variable called injection and set\u0026rsquo;s it\u0026rsquo;s default value to 0 so if we didn\u0026rsquo;t enter a value there, that variable will set to 0 by default. and in that init function, I made every variable define to it\u0026rsquo;s local variable, This is called scoping and there are two scopes. global and local, you can use local variables to assign variables that are only accessable within that function or class, then there are global variables, which can be accesses by anywhere in the code. now you can create global variables in the code, everything that\u0026rsquo;s not within a function, loop, class etc\u0026hellip; are defined globally. after that ends, I made two more funcitons with bark and inject to print barking sound and incriment the injections and print that injected several times. It\u0026rsquo;s the same for the cats also but I changed bark to meaw\nAfter classes I made four variables and made them equal to the name of the function and passed the values defined in the __ init __ section and officially these variables are now objects. now I can call their function as I did after I assigning them, These would run their functions as usual.\nThen I made a list of the objects called animals and added a for loop for each object in animals, here you can see in the results, that I accessed the values of the objects in it. and inspect carefully, this is the most simplest form I can imagine for object oriented python.\nAnd the results are\n  Woof Woof\rMary Injected 2 times\rPipi Injected 1 times\rmeaw meaw\rName : Saly\rage : 2\rinjections : 0\rName : Mary\rage : 3\rinjections : 4\rName : Pipi\rage : 1\rinjections : 1\rName : Popo\rage : 5\rinjections : 0\r  Run these examples for your self and see for your self.\nWhat\u0026rsquo;s Next Well, my friends, You are officially done with this course, you can attend a free test and get a certificate from us on this course, If you\u0026rsquo;re interested, just use our mail tecinpactagencies@gmail.com to contact us. Also python is a huge programming language and there are so much more libraries modules and so much more for you to try out and learn, Explore the world and maybe you\u0026rsquo;ll find your passion with this language.\nConclusions Here, I brought you a full python tutorial with examples that are easy to follow. It\u0026rsquo;s a plesure to help beginers with their career but These tutorials take about 3-4 Days worth of work and so much effort and time, so It\u0026rsquo;s greate if you can show some love by sharing these with others. Remember sharing is careing.\n","permalink":"https://www.tecinpact.tk/post/python-ultimate-crash-course-2020/","tags":["Programming","Software Development"],"title":"Python Ultimate Crash Course (Zero-To-Hero)"},{"categories":[],"contents":"Introduction Serverless web hosting getting popular day by day, with the rise of static websites, So here today, I\u0026rsquo;m going to show you how to host your created website ( HTML JS And CSS files ) In the google drive, and setting up a proper domain name for it using Freenom and netlify. If you are a typical follower of my blog, this would be awkward because I didn\u0026rsquo;t completed the web development course just yet. But I will very soon and a side note : This is a side post Until I\u0026rsquo;m preparing the Python Programming course.\nWebsite Well, for now you have the HTML file (index.html) you made from our HTML Zero To Hero Course or you should have a static website pre built. First thing\u0026rsquo;s first, we have to upload the webpage to a folder in our google drive. Here you can download the sample file I\u0026rsquo;m going to use in this project.\nPre Note And FAQ Is This Hard? Nop this is a piece of cake and for static websites, this is golden.\nIs This Not Premium? The User won\u0026rsquo;t feel a difference at all, so Don\u0026rsquo;t worry on that.\nFeatures? Servers are online pretty much all the time. Because it\u0026rsquo;s hosted in the gdrive, you have Unlimited everything except for the storage. In terms of storage you have 15GB Free and you can pay to get more. Considering this is a static site, you\u0026rsquo;ll never going to pay a penny on this.\nLooks Fake? Yeah it looks not true at all, but trust me it is true and let me show you How I do it.\nUploading The Pages It\u0026rsquo;s simple as it seems. Login to your google drive platform and create a folder and name it public\nNow double click to get in to that folder and put your documents in there.\nNow get back to the root folder and right-click on the public folder and click on share.\nIf the get link section says It\u0026rsquo;s restricted, select Change to anyone with the link. And the get link section should change to green.\nnow go to Drive To Web (www.drv.tw) and click on Host on google Drive.\nSelect your google account to login to your drive with the service.\nAnd allow the service to manage your gdrive by pressing allow button\nIf everything got correctly, now You\u0026rsquo;ll be redirected to the admin panel and wait for it to recognize GDrive public folder.\nNow you should see a link with a /public/ folder and that\u0026rsquo;s your hosted link. You can visit it by clicking on the link and You\u0026rsquo;re pretty much done with hosting.\nAssigning A Domain If you don\u0026rsquo;t have a domain name, You can visit This Guide To get a free domain and setting up it\u0026rsquo;s Name Servers.\nNow Let\u0026rsquo;s focus on setting it up. Here, I\u0026rsquo;m using a domain I Registered on that previous tutorial on Free TLDs. you can visit it HERE.\nSo I\u0026rsquo;m using www.tecinpactdemonstration.tk as my domain. so Now I have to go back to the gdrive and rename our public folder to www.tecinpactdemonstration.tk and This is compulsory\nThis is what my DNS Management page looks like, so now I\u0026rsquo;m renaming my GDrive folder.\nNow after that go to your Drive To Web drv.tw page and refresh it. It should show you a link with your domain at the end. remember this is the directory of your page. now copy the first part of that domain, for me I\u0026rsquo;m copying the tfwk9wuluwzzw28ngta5qa-on.drv.tw part.\nNow come back to your Domain management section and select on add new record button, this would popup with the DNS Record manager.\nNow you have to select CNAME for record type and in the name, enter www. and in the value section, paste what you just copied. and for the TTL enter 1. and save it.\nWhat happens now is a magic. Your site would be hosted in the domain for me, my sample page is hosted in http://www.tecinpactdemonstration.tk/ And You\u0026rsquo;re pretty much done!\nConclusion Now What is this? I\u0026rsquo;m sure you\u0026rsquo;ll be amazed seeing how great this work. Yeah this is something I\u0026rsquo;m considering. there was a time I did my blogging like this, the chances are It\u0026rsquo;s totally free and you\u0026rsquo;re golden with it. In terms of security, no one can \u0026ldquo;Hack\u0026rdquo; your website because It\u0026rsquo;s protected with google\u0026rsquo;s securities and you didn\u0026rsquo;t had to spend a penny on this project! How crazy is that! I\u0026rsquo;m providing you how you can continue with this knowledge and some better ways I use now, even for this blog. Ah and I\u0026rsquo;m not even paying a single penny for this blog (Later on that). No matter what tier you\u0026rsquo;re in, you must consider the possibilities and you should check this out.\n","permalink":"https://www.tecinpact.tk/post/google-drive-serverless-web-hosting-2020/","tags":["Web development","Static Sites"],"title":"Google Drive Serverless Web Hosting 2020"},{"categories":[],"contents":"Introduction HTML is the structural markup language for the web development community, there are more than HTML in markup community but for websites, we use mainly HTML. I\u0026rsquo;ll explain HTML from ground level so if you\u0026rsquo;re a absolute beginner, you can follow up easily. If something went wrong, just contact me from the links provided.\nEnvironment HTML doesn\u0026rsquo;t need a specific environment to run, but Modern web development required you to host the main files. So let\u0026rsquo;s start with our code editor. You can use anything if you know what you\u0026rsquo;re doing, or else I\u0026rsquo;m using Visual Studio Code and I installed the live server extension for this demo. Or you can use Codesandbox.io (Not Sponsored).\nFolder Structure Modern web development has a rule to start the main HTML file with\n  index.html\r  Name scheme. remember the whole file name and the extension is in lowercase, and put it in the root folder. Now what is this root folder? Remember, this folder is the main folder of your Project. When You\u0026rsquo;re uploading the site or developing the hybrid app, you are uploading this folder to the servers. so it\u0026rsquo;s the main folder.\nSetting up the VS Code If you are using something else, just skip this part. Otherwise open the root folder in visual studio by using First\n  Ctrl + k\r  Then\n  Ctrl + o\r  Use this combination accordingly or go to File \u0026gt; Open Folder\nThen create the index.html file in the root folder and use the Go Live button at the bottom right corner, or use the following key combination\n  Alt + L\r  Then\n  Alt + O\r  then the index.html file should be hosted and opened in the browser, or just use\n  localhost:5000\r  in the browser to get to the hosted file. remember the 5000 port is the default, but it could change. so replace it with whatever the GO Live button turn into. after hosting, the go live button will show a port. replace 5000 with that port and you\u0026rsquo;re good to go.\nNow Open the index.html File and let\u0026rsquo;s begin coding.\nHTML Introduction Main concept in the HTML language is, you just have to open a tag, add content, close the tag. This would make the content in the tag inherit the properties of the tag. Opening Tags looks like this.\n  \u0026lt;tag\u0026gt;\r  This is a Closing Tag\n  \u0026lt;/tag\u0026gt;\r  Remember, You MUST CLOSE AN OPENED TAG NO MATTER WHAT. But you can also Nest the tags accordingly to your functionality.\n  \u0026lt;tag1\u0026gt;\r\u0026lt;tag2\u0026gt;\r\u0026lt;tag3\u0026gt;\u0026lt;/tag3\u0026gt;\r\u0026lt;tag4\u0026gt;\u0026lt;/tag4\u0026gt;\r\u0026lt;/tag2\u0026gt;\r\u0026lt;/tag\u0026gt;\r  Any how you must close an opened tag! that\u0026rsquo;s a must. Otherwise your code hierarchy would get broken.\nNow that out of the way, Let\u0026rsquo;s start Actual coding. Remember this is the Structure so you can\u0026rsquo;t create something only from HTML. you need CSS and JS for a website, Until I explain everything, just follow up with ease.\nZero Let me show you what a HTML Page looks like first. you can copy this code and see for your self. just paste it in the index.html page and save it. then just double click and open it or run it from the live server. for codesandbox.io users, just paste the code and the preview should refresh.\n  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;Page Title\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;This is a Heading\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;This is a paragraph.\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r  Let me explain this code section\n The DOCTYPE html declaration defines that this document is an HTML5 document, This must be in the top    \u0026lt;!DOCTYPE html\u0026gt;    The html element is the root element of an HTML page    \u0026lt;html\u0026gt;\r   The head element contains meta information about the HTML page    \u0026lt;head\u0026gt;\r   The title element specifies a title for the HTML page (which is shown in the browser\u0026rsquo;s title bar or in the page\u0026rsquo;s tab)    \u0026lt;title\u0026gt;\r   The body element defines the document\u0026rsquo;s body, and is a container for all the visible contents, such as headings, paragraphs, images, hyperlinks, tables, lists, etc.    \u0026lt;body\u0026gt;\r   The h1 element defines a large heading    \u0026lt;h1\u0026gt;\r   The p element defines a paragraph    \u0026lt;p\u0026gt;\r  HTML Elements Elements are tags, An HTML element is defined by a start tag, some content, and an end tag:\n  \u0026lt;tag\u0026gt; Content... \u0026lt;/tag\u0026gt;\r     Start tag Element content End tag     \u0026lt; h1\u0026gt; My First Heading \u0026lt;/ h1\u0026gt;   \u0026lt; p\u0026gt; My first paragraph. \u0026lt;/ p\u0026gt;    HTML Structure Here\u0026rsquo;s The basic Structure of a HTML Page Study this structure carefully, I don\u0026rsquo;t think I\u0026rsquo;m going to add more layout sections to this course because we\u0026rsquo;re doing something serious today.\nHTML History Let\u0026rsquo;s get to know what we\u0026rsquo;re dealing with, Now we\u0026rsquo;re using HTML 5.2 and 6 would be out in the near future, I\u0026rsquo;ll let you know when we got something new.\n   Year Version     1989 Tim Berners-Lee invented www   1991 Tim Berners-Lee invented HTML   1993 Dave Raggett drafted HTML+   1995 HTML Working Group defined HTML 2.0   1997 W3C Recommendation: HTML 3.2   1999 W3C Recommendation: HTML 4.01   2000 W3C Recommendation: XHTML 1.0   2008 WHATWG HTML5 First Public Draft   2012 WHATWG HTML5 Living Standard   2014 W3C Recommendation: HTML5   2016 W3C Candidate Recommendation: HTML 5.1   2017 W3C Recommendation: HTML5.1 2nd Edition   2017 W3C Recommendation: HTML5.2    HTML Documents VS Code users could use the ! attribution to get the basic boilerplate to their HTML document, and here\u0026rsquo;s what the basic boilerplate looks like.\n  \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;Page Title\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;This is a Heading\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;This is a paragraph.\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r  But It\u0026rsquo;s Same as the first example? Exactly. You have to use the Declaration at the top, the HTML tags, in it head and body tags. head contains preload scripts and body holds all of the document. this is it my friends, let\u0026rsquo;s dig deep\nThe \u0026lt;!DOCTYPE\u0026gt; Declaration This declaration represents the document type, and helps browsers to display web pages correctly. It must only appear once, at the top of the page (before any HTML tags). the declaration for HTML 5 would be\n  \u0026lt;!DOCTYPE html\u0026gt;\r  HTML Headings There are 6 HTML Heading tags\n  \u0026lt;h1\u0026gt; Content 1 \u0026lt;/h1\u0026gt;\r\u0026lt;h2\u0026gt; Content 2 \u0026lt;/h2\u0026gt;\r\u0026lt;h3\u0026gt; Content 3 \u0026lt;/h3\u0026gt;\r\u0026lt;h4\u0026gt; Content 4 \u0026lt;/h4\u0026gt;\r\u0026lt;h5\u0026gt; Content 5 \u0026lt;/h5\u0026gt;\r\u0026lt;h6\u0026gt; Content 6 \u0026lt;/h6\u0026gt;\r  Easy isn\u0026rsquo;t it? yeah, it is. These heading tags are corresponding to several sizes of headings, in the decreasing order to be exact. Try it between body tags and see for your self.\nHTML Paragraph This would be the tag you\u0026rsquo;re working with for the most part because HTML is just book writing but with the bleeding edge technology.\n  \u0026lt;p\u0026gt; lorem ipsum \u0026lt;/p\u0026gt;\r  No matter how much white space you used, you can\u0026rsquo;t sure HTML would pre format it before displaying\n  \u0026lt;p\u0026gt; lorem ipsum \u0026lt;/p\u0026gt;\r\u0026lt;p\u0026gt; lorem ipsum \u0026lt;/p\u0026gt;\r  These would display the same in HTML. Try it for your self. You can add a horizontal line across the document using hr tag\n  \u0026lt;hr/\u0026gt;\r  Notice this doesn\u0026rsquo;t have a closing tag? This is a self closing tag, and there are few self closing tags around here, so stay sharp for them. Also if you need a line break, use the br tag and it\u0026rsquo;s also a self closing tag.\n  \u0026lt;br/\u0026gt;\r  If you want to write a poem\n  \u0026lt;p\u0026gt;\rTwinkle Twinkle little star\rHow I wander what you are\rUp above the world so high\rLike a diamond in the sky\r\u0026lt;/p\u0026gt;\r  Believe or not, this won\u0026rsquo;t work, so for pre formatting ourselves, we use the pre tag\n  \u0026lt;p\u0026gt;\r\u0026lt;pre\u0026gt;\rTwinkle Twinkle little star\rHow I wander what you are\rUp above the world so high\rLike a diamond in the \u0026lt;/pre\u0026gt;\r\u0026lt;/p\u0026gt;\r  Try these examples to see for your self.\nHTML Links / Anchors Every single one of us knows what links are? aren\u0026rsquo;t we? if you don\u0026rsquo;t know what links are, I\u0026rsquo;m not sure you should be continuing on, so check this link, We have something called attributes in HTML. attributes are like properties for elements. they declared inside Elements and changes that element\u0026rsquo;s behavior. for links,\nwe use \u0026lt; a \u0026gt; tag and in it, we can use\n   Attribute Description     download Prompts the user to save the linked URL instead of navigating to it. Can be used with or without a value   href The URL that the hyperlink points to. Links are not restricted to HTTP-based URLs — they can use any URL scheme supported by browsers   hreflang Hints at the human language of the linked URL. No built-in functionality. Allowed values are the same as the global lang attribute.   ping A space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs. Typically for tracking.   referrerpolicy How much of the referrer to send when following the link. See Referrer-Policy for possible values and their effects.   rel The relationship of the linked URL as space-separated link types.   target Where to display the linked URL, as the name for a browsing context (a tab, window, or iframe). The following keywords have special meanings for where to load the URL    a simple link would be like this\n  \u0026lt;a href=\u0026quot;https://www.tecinpact.tk\u0026quot;\u0026gt;Click Here\u0026lt;/a\u0026gt;\r  HTML Images HTML images are defined with the img tag.\nThe source file (src), alternative text (alt), width, and height are provided as attributes\nsimply like this\n  \u0026lt;img src=\u0026quot;./images/profile.jpg\u0026quot; alt=\u0026quot;This would show if something went wrong\u0026quot; width=\u0026quot;100px\u0026quot; height=\u0026quot;100px\u0026quot;\u0026gt;\r  Title Attribute (Tooltips) You can use the Title attribute anywhere to give the user a tooltip\n  \u0026lt;p title=\u0026quot;hello\u0026quot;\u0026gt;text\u0026lt;/p\u0026gt;\r\u0026lt;h1 title=\u0026quot;hello\u0026quot;\u0026gt;text\u0026lt;/h1\u0026gt;\r\u0026lt;a title=\u0026quot;hello\u0026quot;\u0026gt;text\u0026lt;/a\u0026gt;\r  Important Note Always use single or double quotes when passing attribute values, no matter what.\nText Formatting This is like a word document with extra steps, so we also have text formatting here, and to use it, we just have to use some tags, I\u0026rsquo;ll show you a single example but you can try others too Formatting elements were designed to display special types of text, so use these tags.\n b - Bold text strong - Important text i - Italic text em - Emphasized text mark - Marked text small - Smaller text del - Deleted text ins - Inserted text sub - Subscript text sup - Superscript text  To use these formatters, I\u0026rsquo;ll demonstrate it with a paragraph and a heading, but you can use it anywhere\n  \u0026lt;p\u0026gt; Hello \u0026lt;b\u0026gt;Bold text\u0026lt;/b\u0026gt; World \u0026lt;/p\u0026gt;\r\u0026lt;h1\u0026gt; Hello \u0026lt;i\u0026gt;Italic text\u0026lt;/i\u0026gt; World \u0026lt;/h1\u0026gt;\r  HTML Quotation and Citation Elements We will go through the blockquote,q, abbr, address, cite, bdo HTML elements.\n   Element Description     blockquote this element can blockquote text sections.   q this element is used for short quotations   abbr This element defines an abbreviation or an acronym.Marking abbreviations can give useful information to browsers, translation systems and search-engines.   address as it says, it\u0026rsquo;s for typing out addresses, now this tag would improve SEO index on the page   cite this tag defines the title of a creative work for an example a book, a painting, a poem, a song etc.   bdo BDO stands for Bi-Directional Override.    let me show you an example\n  \u0026lt;address\u0026gt;\rNo.100,\rsomewhere street,\rsomewhere state,\r101010,\ra country.\r\u0026lt;/address\u0026gt;\r  and BDO has something to show you\n  \u0026lt;bdo dir=\u0026quot;rtl\u0026quot;\u0026gt;This text will be written from right to left\u0026lt;/bdo\u0026gt;\r  This is how you use a bdo element. for others, just enclose the text with it and you\u0026rsquo;re pretty much done.\nHTML Comments Now now, this is not how you can add a comment section on your page, it\u0026rsquo;s to comment out certain hints for you to understand the code in the future because humans are just a potato when remembering things, so it\u0026rsquo;s useful to add comments in documents so you don\u0026rsquo;t have to remember a 1200 line document entirely.\nComments are simple and straight forward.\n  \u0026lt;!-- This Won't Do anything with the code --\u0026gt;\r\u0026lt;p\u0026gt; bla bla bla bla bla \u0026lt;/p\u0026gt;\r\u0026lt;!-- This\rIs A\rMultiline Comment\r--\u0026gt;\r  HTML Colors you can create any color you want from hex codes but, there are pre defined 140 standard colors to begin with, Here you can see the complete color list.\nAdding CSS HTML Can\u0026rsquo;t use it\u0026rsquo;s element\u0026rsquo;s to add styles to the page, so it needs CSS. I\u0026rsquo;ll cover CSS in the future and I won\u0026rsquo;t showcase any css codes today, but I\u0026rsquo;ll show how you can add CSS to the HTML Page since It\u0026rsquo;s compulsory to use CSS.\nThere are 3 ways of doing this\n Inline - Using style attribute in any of the elements    \u0026lt;tag style=\u0026quot;css code here\u0026quot;\u0026gt; Content \u0026lt;/tag\u0026gt;\r   Internal - Using style tags in the head    \u0026lt;style\u0026gt; css goes here \u0026lt;/style\u0026gt;\r   External - you can link a css document in the head    \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;styles.css\u0026quot;\u0026gt;\r  HTML Links Here we go a bit deeper in to the situation. we are discussing about target and url types.\nThe target Attribute By default, the linked page will be displayed in the current browser window. To change this, you must specify another target for the link.\nThe target attribute specifies where to open the linked document.\nThe target attribute can have one of the following values:\n _self - Default. Opens the document in the same window/tab as it was clicked _blank - Opens the document in a new window or tab _parent - Opens the document in the parent frame _top - Opens the document in the full body of the window  example\n  \u0026lt;a href=\u0026quot;https://www.tecinpact.tk\u0026quot; target=\u0026quot;_blank\u0026quot; \u0026gt; Content \u0026lt;/a\u0026gt;\r  Absolute URLs vs. Relative URLs all examples above are using an absolute URL (a full web address) in the href attribute. A local link (a link to a page within the same website) is specified with a relative URL (without the \u0026ldquo;https://www\u0026rdquo; part)\nAbsolute URL\n  \u0026lt;a href=\u0026quot;https://www.tecinpact.tk/index.html\u0026quot;\u0026gt;HTML\u0026lt;/a\u0026gt;\r  Relative URL\n  \u0026lt;a href=\u0026quot;index.html\u0026quot;\u0026gt;HTML\u0026lt;/a\u0026gt;\r  Both of these are referring to the same page if it\u0026rsquo;s placed in the roots of my blog. Also you can add anything in anchor tags, and what inside would turn into the link, even you can use images like this\n  \u0026lt;a href=\u0026quot;https://www.tecinpact.tk/\u0026quot;\u0026gt;\u0026lt;img src=\u0026quot;images/site-feature-image.png\u0026quot;/\u0026gt;\u0026lt;/a\u0026gt;\r  I Think you got the point here. But linking for emails, that\u0026rsquo;s something else. this is the format for it.\n  \u0026lt;a href=\u0026quot;mailto:someone@example.com\u0026quot;\u0026gt;Send email\u0026lt;/a\u0026gt;\r  Also you can use a link as a bookmark, which means if someone clicked on that link, he or she will be scrolled to a certain location in the document. for this first you need to assign IDs, i\u0026rsquo;ll explains IDs in a while, but for now, say if you have a id assigned to a element called myID. to scroll to it,\n  \u0026lt;a href=\u0026quot;#myID\u0026quot;\u0026gt;Scroll to My ID\u0026lt;/a\u0026gt;\r  of if you\u0026rsquo;re using an external page,\n  \u0026lt;a href=\u0026quot;that-page.html#myID\u0026quot;\u0026gt;Scroll to My ID\u0026lt;/a\u0026gt;\r  HTML Tables Here, you can use the table element to create tables. How ever there are more to this, In tables, you have to define Table Rows with tr element inside the table element and Inside the table rows, you have to define table heading or table data with th or tr elements, let me show you a Simple Table\n  \u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt; First Heading \u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt; Second Heading \u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt; Third Heading \u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt; First Data \u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt; Second Data \u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt; Third Data \u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt;\r  You can expand a data cell in columns or rows, this is the same process as merging cells in excel sheets. There are two ways on doing this,\n Spread in columns with Colspan Spread in rows with Rowspan  Here is a demonstration on how you can do this\nConsidering Colspan attribute\n  \u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt;Name\u0026lt;/th\u0026gt;\r\u0026lt;th colspan=\u0026quot;2\u0026quot;\u0026gt;Telephone\u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;Bill Gates\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;55577854\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;55577855\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt;\r  Considering Rowspan attribute\n  \u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt;Name:\u0026lt;/th\u0026gt;\r\u0026lt;td\u0026gt;Bill Gates\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th rowspan=\u0026quot;2\u0026quot;\u0026gt;Telephone:\u0026lt;/th\u0026gt;\r\u0026lt;td\u0026gt;55577854\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;55577855\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt;\r  Now here, you\u0026rsquo;ll notice that I\u0026rsquo;m not providing you with any Images lately on the display side of the things, it\u0026rsquo;s because by now, you should be trying these by your self! If not, Why are you even following this article?\nAlso You can add captions to the table with the caption element\n  \u0026lt;table\u0026gt;\r\u0026lt;caption\u0026gt;Our First Table\u0026lt;/caption\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt; First Heading \u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt; Second Heading \u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt; Third Heading \u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt; First Data \u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt; Second Data \u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt; Third Data \u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt;\r  Important Notice The Caption element must be defined after the Table element as in the above example.\nHTML Lists It\u0026rsquo;s pretty straight forward from here on, There are three types of lists.\n Un-ordered lists Ordered lists Description lists  No matter what you use, you have to add the elements to the list using li element. Let me demonstrate to you\n  \u0026lt;!-- Un-ordered List --\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li\u0026gt; element 1 \u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt; element 2 \u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt; element 3 \u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;!-- Ordered List --\u0026gt;\r\u0026lt;ol\u0026gt;\r\u0026lt;li\u0026gt; element 1 \u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt; element 2 \u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt; element 3 \u0026lt;/li\u0026gt;\r\u0026lt;/ol\u0026gt;\r\u0026lt;!-- Description List --\u0026gt;\r\u0026lt;dl\u0026gt;\r\u0026lt;dt\u0026gt;Main Item\u0026lt;/dt\u0026gt;\r\u0026lt;dd\u0026gt;main Item description\u0026lt;/dd\u0026gt;\r\u0026lt;dt\u0026gt;Secondary Item\u0026lt;/dt\u0026gt;\r\u0026lt;dd\u0026gt;Secondary Item description\u0026lt;/dd\u0026gt;\r\u0026lt;/dl\u0026gt;\r  HTML Blocks Now my friends if you\u0026rsquo;re comfortable with the concepts of HTML, let me show you how to group anything in HTML. grouping elements can give you the possibilities and the ease to apply certain properties to a group of elements without doing it one by one, There are few blocks you can use for this purpose and they are pretty much self explanatory.\nHere are some block-level elements in HTML.\n address article aside blockquote canvas dd div dl dt fieldset figcaption figure footer form h1-h6 header hr li main nav noscript ol p pre section table tfoot ul video  To use HTML Block-level elements\n  \u0026lt;tag\u0026gt;\r.\rcontent goes here\r.\r\u0026lt;/tag\u0026gt;\r  Now don\u0026rsquo;t get panic seeing these, You\u0026rsquo;ll understand these elements with some examples, and also the internet is open for more information. (Just google for more information.)\nAnd Here are some Inline-elements\n a abbr acronym b bdo big br button cite code dfn em i img input kbd label map object output q samp script select small span strong sub sup textarea time tt var  To use inline elements\n  bla bla \u0026lt;tag\u0026gt; this is a \u0026lt;/tag\u0026gt; paragraph in something in the document\r  Now, you don\u0026rsquo;t have to use all of these to remembered in order to master in html, but it\u0026rsquo;s handy to know what\u0026rsquo;s there to use in case of \u0026ldquo;An Event\u0026rdquo;.\nDiv element Now this div element stand for division and this is something special because we have to use this in like everywhere because this is the main element on grouping elements, to use\n  \u0026lt;div\u0026gt;\r.\r.\rContent Goes Here\r.\r.\r\u0026lt;/div\u0026gt;\r  And you can apply certain properties to that div specifically. (more details later)\nSpan element This is exactly like the div element but this can be used inline.\n  bla bla \u0026lt;span\u0026gt; this is a \u0026lt;/span\u0026gt; paragraph in something in the document\r  HTML Classes This is a method of selecting a certain set of elements, spread across the HTML document and without using elements, now this attribute would be used in CSS and JS to identify the element and I\u0026rsquo;ll explain how to select using classes in the future, for now let\u0026rsquo;s add classes to certain elements\n  \u0026lt;tag class=\u0026quot;your-class second-class\u0026quot;\u0026gt;\r.\r.\rContent Goes Here\r.\r.\r\u0026lt;/tag\u0026gt;\r  you can have any number of classes assigned for a element and separate them with a space and you\u0026rsquo;re good to go.\nHTML ID This is exactly like classes but you can\u0026rsquo;t use multiple IDs for a element or you can\u0026rsquo;t assign a single ID to multiple tags. IDs are used to select specific tags such as a input box for password in a login forum. more details later. Let\u0026rsquo;s assign an ID\n  \u0026lt;tag id=\u0026quot;myID\u0026quot;\u0026gt;\r.\r.\rContent Goes Here\r.\r.\r\u0026lt;/tag\u0026gt;\r  HTML Iframes Iframes are also easy to use, you can embed another webpage (local or external) in to your webpage. and it\u0026rsquo;s something you have to try for yourself to understand\n  \u0026lt;iframe src=\u0026quot;https://www.tecinpact.tk/\u0026quot; title=\u0026quot;description\u0026quot; width=\u0026quot;100px\u0026quot; height=\u0026quot;100px\u0026quot;\u0026gt;\r\u0026lt;/iframe\u0026gt;\r  also you can change the src of the iframe using an anchor as this\n  \u0026lt;iframe src=\u0026quot;https://www.tecinpact.tk/\u0026quot; name=\u0026quot;iframe_a\u0026quot; title=\u0026quot;Iframe Example\u0026quot;\u0026gt;\u0026lt;/iframe\u0026gt;\r\u0026lt;p\u0026gt;\u0026lt;a href=\u0026quot;http://www.tecinpact.tk/post/html-for-modern-web-development/\u0026quot; target=\u0026quot;iframe_a\u0026quot;\u0026gt;W3Schools.com\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\r  Script Element You can insert JS to your webpage externally or locally using script tag, to use it externally.\n  \u0026lt;script src=\u0026quot;external-js-file.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r  or Internally\n  \u0026lt;script\u0026gt;\r// JS Goes Here\r\u0026lt;/script\u0026gt;\r  And don\u0026rsquo;t consider this for now, after I published the JS crash course, you\u0026rsquo;re good to go.\nHead element Let\u0026rsquo;s turn around to the boilerplate and our Head element, It\u0026rsquo;s one of the main elements in HTML and you can use it to house the title, style, meta, link, script and base elements which describes the document\nyou should know by now how these work, so I\u0026rsquo;ll provide some examples.\nLinking external css files\n  \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;mystyle.css\u0026quot;\u0026gt;\r  Define character set\n  \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r  Define Keywords for SEO\n  \u0026lt;meta name=\u0026quot;keywords\u0026quot; content=\u0026quot;HTML, CSS, JavaScript\u0026quot;\u0026gt;\r  Define Description for SEO\n  \u0026lt;meta name=\u0026quot;description\u0026quot; content=\u0026quot;Free Web tutorials\u0026quot;\u0026gt;\r  Define the author of the page\n  \u0026lt;meta name=\u0026quot;author\u0026quot; content=\u0026quot;John Doe\u0026quot;\u0026gt;\r  Refresh the page every 30 seconds\n  \u0026lt;meta http-equiv=\u0026quot;refresh\u0026quot; content=\u0026quot;30\u0026quot;\u0026gt;\r  Setting the viewport to make your website look good on all devices\n  \u0026lt;meta name=\u0026quot;viewport\u0026quot; content=\u0026quot;width=device-width, initial-scale=1.0\u0026quot;\u0026gt;\r  HTML Computer codes HTML Has a unique property to showcase computer codes in your documents, as I\u0026rsquo;m doing right now, you can use code and kbd elements to showcase codes and keyboard inputs easily, also samp for programing outputs and var for Variables\n  \u0026lt;code\u0026gt;\rvar x = 10;\rvar b = 5;\r\u0026lt;/code\u0026gt;\r    This is kbd function, to copy \u0026lt;kbd\u0026gt;Ctrl + C\u0026lt;/kbd\u0026gt; is useful\r    \u0026lt;p\u0026gt;Message from my computer:\u0026lt;/p\u0026gt;\r\u0026lt;p\u0026gt;\u0026lt;samp\u0026gt;File not found.\u0026lt;br\u0026gt;Press F1 to continue\u0026lt;/samp\u0026gt;\u0026lt;/p\u0026gt;\r    \u0026lt;p\u0026gt;The area of a triangle is: 1/2 x \u0026lt;var\u0026gt;b\u0026lt;/var\u0026gt; x \u0026lt;var\u0026gt;h\u0026lt;/var\u0026gt;, where \u0026lt;var\u0026gt;b\u0026lt;/var\u0026gt; is the base, and \u0026lt;var\u0026gt;h\u0026lt;/var\u0026gt; is the vertical height.\u0026lt;/p\u0026gt;\r  HTML Forms You can create a HTML Form using the form element, in it you can set\n Text Inputs Email Inputs Password Inputs Radio buttons Selections Submit button Reset button Text areas  We won\u0026rsquo;t be considering the functionality of forms under modern web development until JS course, so let\u0026rsquo;s learn the structure, here\u0026rsquo;s an example for you to try out\n  \u0026lt;form\u0026gt;\r\u0026lt;label\u0026gt;Text\u0026lt;/label\u0026gt;\r\u0026lt;input type=\u0026quot;text\u0026quot; id=\u0026quot;text\u0026quot; name=\u0026quot;name\u0026quot; placeholder=\u0026quot;Text\u0026quot;\u0026gt;\r\u0026lt;label\u0026gt;Email\u0026lt;/label\u0026gt;\r\u0026lt;input type=\u0026quot;email\u0026quot; id=\u0026quot;email\u0026quot; name=\u0026quot;email\u0026quot; placeholder=\u0026quot;Email\u0026quot;\u0026gt;\r\u0026lt;label\u0026gt;Password\u0026lt;/label\u0026gt;\r\u0026lt;input type=\u0026quot;password\u0026quot; id=\u0026quot;password\u0026quot; name=\u0026quot;password\u0026quot; placeholder=\u0026quot;password\u0026quot;\u0026gt;\r\u0026lt;label\u0026gt;Textarea\u0026lt;/label\u0026gt;\r\u0026lt;textarea placeholder=\u0026quot;textArea\u0026quot; id=\u0026quot;textarea\u0026quot; name=\u0026quot;textarea\u0026quot; \u0026gt;\u0026lt;/textarea\u0026gt;\r\u0026lt;br/\u0026gt;\r\u0026lt;input type=\u0026quot;radio\u0026quot; id=\u0026quot;male\u0026quot; name=\u0026quot;gender\u0026quot; value=\u0026quot;male\u0026quot;\u0026gt;\r\u0026lt;label for=\u0026quot;male\u0026quot;\u0026gt;Male\u0026lt;/label\u0026gt;\u0026lt;br\u0026gt;\r\u0026lt;input type=\u0026quot;radio\u0026quot; id=\u0026quot;female\u0026quot; name=\u0026quot;gender\u0026quot; value=\u0026quot;female\u0026quot;\u0026gt;\r\u0026lt;label for=\u0026quot;female\u0026quot;\u0026gt;Female\u0026lt;/label\u0026gt;\u0026lt;br\u0026gt;\r\u0026lt;input type=\u0026quot;radio\u0026quot; id=\u0026quot;other\u0026quot; name=\u0026quot;gender\u0026quot; value=\u0026quot;other\u0026quot;\u0026gt;\r\u0026lt;label for=\u0026quot;other\u0026quot;\u0026gt;Other\u0026lt;/label\u0026gt;\r\u0026lt;select id=\u0026quot;cars\u0026quot; name=\u0026quot;cars\u0026quot;\u0026gt;\r\u0026lt;option value=\u0026quot;volvo\u0026quot;\u0026gt;Volvo\u0026lt;/option\u0026gt;\r\u0026lt;option value=\u0026quot;saab\u0026quot;\u0026gt;Saab\u0026lt;/option\u0026gt;\r\u0026lt;option value=\u0026quot;fiat\u0026quot;\u0026gt;Fiat\u0026lt;/option\u0026gt;\r\u0026lt;option value=\u0026quot;audi\u0026quot;\u0026gt;Audi\u0026lt;/option\u0026gt;\r\u0026lt;/select\u0026gt;\r\u0026lt;datalist id=\u0026quot;browsers\u0026quot;\u0026gt;\r\u0026lt;option value=\u0026quot;Internet Explorer\u0026quot;\u0026gt;\r\u0026lt;option value=\u0026quot;Firefox\u0026quot;\u0026gt;\r\u0026lt;option value=\u0026quot;Chrome\u0026quot;\u0026gt;\r\u0026lt;option value=\u0026quot;Opera\u0026quot;\u0026gt;\r\u0026lt;option value=\u0026quot;Safari\u0026quot;\u0026gt;\r\u0026lt;/datalist\u0026gt;\r\u0026lt;/form\u0026gt;\r  These are the basics and you can try to understand what each item does, and here\u0026rsquo;s a list of Input types to try on\n button checkbox color date datetime-local email file hidden image month number password radio range reset search submit tel text time url week  How to use these again? Let me show you\n  \u0026lt;input type=\u0026quot;type-from-above\u0026quot;/\u0026gt;\r  use a ID and name attribute to give it a uniqueness so we can select it later.\nalso for input element you can use these attributes, and they are also pretty much self explanatory\n value Specify an initial value readonly make the field readonly disabled Disable the field size visible width in characters. maxlength Max length of an input field min and max Minimum and maximum values for an input field multiple specifies that the user is allowed to enter more than one value in an input field pattern specifies a regular expression that the input field\u0026rsquo;s value is checked against, when the form is submitted. placeholder specifies short a hint that describes the expected value of an input field. required attribute specifies that an input field must be filled out before submitting the form. autofocus specifies that an input field should automatically get focus when the page loads. autocomplete specifies whether a form or an input field should have autocomplete on or off.  Now how to use them, I\u0026rsquo;ll provide an example with all of those above.\n  \u0026lt;input value=\u0026quot;Jhon Doe\u0026quot; readonly\u0026gt;\r\u0026lt;input value=\u0026quot;Jhon Doe\u0026quot; disabled\u0026gt;\r\u0026lt;input value=\u0026quot;Jhon Doe\u0026quot; size=\u0026quot;30\u0026quot; maxlength=\u0026quot;40\u0026quot; required autofocus autocomplete=\u0026quot;off\u0026quot; placeholder=\u0026quot;Name\u0026quot;\u0026gt;\r  HTML Media To embed videos, it\u0026rsquo;s straight forward.\n  \u0026lt;video width=\u0026quot;320\u0026quot; height=\u0026quot;240\u0026quot; autoplay\u0026gt;\r\u0026lt;source src=\u0026quot;movie.mp4\u0026quot; type=\u0026quot;video/mp4\u0026quot;\u0026gt;\r\u0026lt;source src=\u0026quot;movie.ogg\u0026quot; type=\u0026quot;video/ogg\u0026quot;\u0026gt;\rYour browser does not support the video tag.\r\u0026lt;/video\u0026gt;\r  Also embedding audio is straight forward.\n  \u0026lt;audio controls\u0026gt;\r\u0026lt;source src=\u0026quot;horse.ogg\u0026quot; type=\u0026quot;audio/ogg\u0026quot;\u0026gt;\r\u0026lt;source src=\u0026quot;horse.mp3\u0026quot; type=\u0026quot;audio/mpeg\u0026quot;\u0026gt;\rYour browser does not support the audio element.\r\u0026lt;/audio\u0026gt;\r  HTML Special Elements Well, here are some special elements to use in your documents.\n br - This element is used for line breaks hr - This element is used for Horizontal lines    \u0026lt;p\u0026gt;Hello the world \u0026lt;br\u0026gt; Of HTML Magic\u0026lt;/p\u0026gt;\r\u0026lt;hr\u0026gt;\r\u0026lt;p\u0026gt;In A Land of code, in the time of web development\u0026lt;/p\u0026gt;\r  WTF Is This? how can this make a Website? Now now, calm down for a second, HTML is the structure for the websites, you can\u0026rsquo;t and you shouldn\u0026rsquo;t style your document with HTML attributes, we\u0026rsquo;re using CSS for styling, and We\u0026rsquo;re going to explore CSS in a further course. and for HTML, You\u0026rsquo;re a Hero now!\nThat\u0026rsquo;s It? That\u0026rsquo;s it, for modern web development, but there are more tags and so many more things on html, but we don\u0026rsquo;t want any of those, because we\u0026rsquo;re creating our own layouts and they are much more responsible than default HTML 5 options. You\u0026rsquo;re open to explore.\nWhat\u0026rsquo;s next? You can get a certificate from Us on completing HTML course for free. If you\u0026rsquo;re interested send what certificates you want to tecinpactagencies@gmail.com and After a brief test on your knowledge, We\u0026rsquo;ll Issue a certificate. Also stay tuned for CSS and JS pages\nCheatsheet ? Yeah here\u0026rsquo;s a cheatsheet for HTML\n Htmlcheatsheet PDF  Conclusion Well, It\u0026rsquo;s hard to make these courses for you, if you can show some love, share these, It would great! Well, anyhow I\u0026rsquo;ll post Css and Js as soon as possible so we can round this up. HTML can be used to create websites mainly and hybrid mobile and desktop apps, but it should be stylized with css and add functions with Js. Stay tuned and I\u0026rsquo;ll make you a pro within no time.\n","permalink":"https://www.tecinpact.tk/post/html-for-modern-web-development/","tags":["web development","HTML","Zero To Hero","Crash Course"],"title":"HTML for Modern Web Development (Zero-To-Hero)"},{"categories":[],"contents":"Introduction No matter what profession you are in, in a certain period of time, you are going to face a situation which you need some materials royalty free for your projects, maybe Images, videos, sound clips etc.. So in this article, let me show you my pics for royalty free Resource collections.\nBut, first, let’s go over some basic royalty-free terms.  Royalty-Free: This allows you to use intellectual property without having to pay royalties or license fees. Creative Commons: You can use these images for free since the artist has waived their rights to their work. However, always review the terms before publishing these images. Public Domain: If any image was created in the United States prior to 1923 then they’re part of the public domain. This means that you’re allowed to copy, modify, or distribute these images without permission. Attribution: You can use these images as long as you give credit to the author. Commercial Use: You’re permitted to use royalty-free images for any type of business venture. Membership: You must sign-up to the site in order to use the royalty-free images. Some sites will charge you for membership.  Now that out to the side, let\u0026rsquo;s begin shall we?\nImages These sites contain Royalty-free High quality images to use for free.\nUnsplash All photos published on Unsplash are licensed under Creative Commons Zero. However, most of the times, it doesn\u0026rsquo;t matter and mention unsplash as a whole and you\u0026rsquo;re good to go.\nPixabay This is similar to unsplash but Pixabay ;D this site is also licensed under Creative Commons Zero so you can give the artist credits for using these in your projects.\nStocksnap Stock snap is the biggest site of three of these, but I always end-up with Unsplash for my daily needs ( As a habit ). but you shouldn\u0026rsquo;t do that, so check this also.\nBurst Burst by shopify, as it says, It\u0026rsquo;s from shopify. This site is also licensed under Creative Commons Zero and you\u0026rsquo;re already know the drill.\nI\u0026rsquo;ll do a 101 Royalty free image sites in the future and stay tuned for that.\nVideos As same as images, but now for videos.\nPixabay My Go-to site for Royalty free videos is, again pixabay. It has a lot more than photos so I\u0026rsquo;m secretly into pixabay.\nPexels Pexels also has amazing Royalty free videos, and Now I wander how the internet running these sites at no cost at all. You should check this also.\nVideovo This is something special, Videvo offers free stock video footage as well as motion graphics created by their community of users. The clips you download from Videvo will be licensed in one of two ways: either through the Videvo Standard License or the Creative Commons 3.0 license. Videos under the Videvo Standard License can be downloaded for free to use in any project, the only restriction being that you don’t make the clips available for download anywhere else.\nAudio Here, we have free effects and background musics. Considering audio, It\u0026rsquo;s hard to look for what we exactly needs, unless the search engine and publishers knows what we feel more than what we meant.\nYoutube Audio Library I Bet you didn\u0026rsquo;t saw this coming, Yeah it\u0026rsquo;s from Youtube and for background musics. You\u0026rsquo;re welcomed.\nFacebook Sound Collection Facebook sound collection is a part of Creator Studio. It strongly resembles the looks of YouTube audio library. However, they offer less filters and some of the songs I found were quite heavy (30-70 Mb). But give it a try anyway: your next best free music might be hiding here.\nFreesound This is great for audio effects and my Go-to. The engine is so much better and I always find what I\u0026rsquo;m looking for\nAudioblocks Well, Here we have a complete collection on audi clips, check is this what you\u0026rsquo;re looking for\nZapsplat like others, this is for audio effects. Engine is somewhat skeptical but it works at the end of the day.\nWave This is my go-to for audio clips, it has amazing audio clips and the search engine knows what we want. But there\u0026rsquo;s a bummer and it\u0026rsquo;s featuring so much premium content, so not suitable for most of us.\nConclusion Here you go, These are all free resource collections for graphic designers and most of the developers to crank up their development environments, and even to use in their own profiles. Everything in the internet Isn\u0026rsquo;t bad, so check these resources and maybe you\u0026rsquo;ll end-up with using these for your next project. Also These are my picks and what I use for my personal and commercial projects, there are so much more and try to explore some.\n","permalink":"https://www.tecinpact.tk/post/royalty-free-internet-resources/","tags":["Web development","Royalty free","Resources","Graphics Designing"],"title":"Royalty Free Internet Resources"},{"categories":[],"contents":"Introduction Visual studio code is a powerful and a user-friendly code editor, It has extended functionality, which makes it an all-in-one solution for most of the web developers and This would be a follow up guide to a Web and Hybrid app development course I\u0026rsquo;m planning forward to.\nInstallation VS Code is available for Windows, Mac and linux, so pretty much It\u0026rsquo;s a cross platform code editor. one of my favourite. You can download it Here for all platforms. Or You can get it from Linux and mac app stores too. And for choco instance,\n  \u0026gt; choco install vscode\r  Command Palette Access all available commands based on your current context.\n  Ctrl + Shift + P\r  Default keyboard shortcuts All of the commands are in the Command Palette with the associated key binding (if it exists). If you forget a keyboard shortcut, use the Command Palette to help you out.\nQuick Open Quickly open files.\n  Ctrl + P\r  Navigate between recently opened files Repeat the Quick Open keyboard shortcut to cycle quickly between recently opened files.\nOpen multiple files from Quick Open You can open multiple files from Quick Open by pressing the Right arrow key. This will open the currently selected file in the background and you can continue selecting files from Quick Open.\nNavigate between recently opened folders and workspaces Open Recent\n  Ctrl + R\r  Displays a Quick Pick dropdown with the list from File \u0026gt; Open Recent with recently opened folders and workspaces followed by files.\nStatus Bar Errors and warnings\n  Ctrl + Shift + M\r  Quickly jump to errors and warnings in the project.\nCycle through errors with F8 or Shift+F8\nYou can filter problems either by type (\u0026lsquo;errors\u0026rsquo;, \u0026lsquo;warnings\u0026rsquo;) or text matching.\nChange language mode   Ctrl + K M\r  f you want to persist the new language mode for that file type, you can use the Configure File Association for command to associate the current file extension with an installed language.\nFor more information Check This article.\nExtensions VS Code has a Extension store on it\u0026rsquo;s own, so no more hard work for working extensions. Here you can see the extension store of the VS Code, you can also trigger it using\n  Ctrl + Shift + X\r  or for mac\n  Command + Shift + X\r  What I Extensions Should You Use Well, for today, I\u0026rsquo;ll show you some extensions I use for my personal Projects, Use the extension Store to get These Extensions.\n   Extension Icon Description     Beautify  This Extension Helps to beautify and format HTML JS CSS SCSS JSON documents.   Community Material Theme  This Would increase the contras between code and the editor, so It\u0026rsquo;s easier to see and easy for the eyes.   JS \u0026amp; CSS Minifier (Minify)  This Extension would help you to minify written codes into .min files, so our sites would be faster in no time.   Live Sass Compiler  We\u0026rsquo;re Using this extension to compile our SCSS Codes into css files so we can link them in our files.   Live Server  As it says in the name, It\u0026rsquo;s a simple web server. why do we need it? because modern JS won\u0026rsquo;t work completely in local files. so we need a some kind of a Server to test everything.   Mark Down All In One  This one will help us on our markdown files, to format markdown files and it also has some Snippets to use.   Mark Down Preview Enhanced  This extension will show a live preview of our markdown files so it\u0026rsquo;s easier to work with.   Material Icon Theme  Here\u0026rsquo;s another theme for you. This would change default file extension icons in VS Code and I Highly Recommend it   Toggle format on save  This extension would format our documents on save. I use it most of the times, and you should.    And That\u0026rsquo;s Pretty much It for now. Also you can search for more extensions in the store anytime you want. Just click install to install it.\nUseful Commands And Guide Press F1 to popup the quick command panel, It\u0026rsquo;ll help you to run quick commands and extensions.\nToggle format on save Press F1 and type Toggle Format on save and your extension window will pop up, click on it and you\u0026rsquo;re good to go. That\u0026rsquo;s pretty much how you do it for almost every extension.\nTerminal / Power shell on current Directory You can open your working directory by using\n  \u0026gt; code .\r  on terminal Or going to File \u0026gt; Open Folder\nThen you can popup an integrated terminal on that specific folder by using\n  Ctrl + `\r  or in Mac\n  Command + `\r  Live Server If you installed the live server Extension, you can see a small Go Live button on bottom right when you\u0026rsquo;re working with HTML Pages.\nQuick Tips You Can use ! Symbol to load up a HTML boilerplate whenever you need.\nEmmet in Visual Studio Code This is a complete toolkit for web developers. It\u0026rsquo;s Easier to learn and use, and It\u0026rsquo;ll improve your productivity overtime. I\u0026rsquo;ll explain it in another post because there are so much to go. I\u0026rsquo;ll provide you what we need in specific documents in the future.\nOr Check This Guide On Emmet. Also a Cheat Sheet to Download\nGIT Integration Yes, VS Code has built in Git support, but you have to download and install git bash to associate with this functions. I\u0026rsquo;ll Explain everything in the future so if you aren\u0026rsquo;t comfortable with anything above, Don\u0026rsquo;t worry you\u0026rsquo;ll be comfortable after everything completes.\nWhat\u0026rsquo;s Next? From Here on I\u0026rsquo;ll Discuss a complete guide to Web development and Hybrid app development. And in the End I\u0026rsquo;ll Provide with a Course hub \u0026ldquo;Maybe\u0026rdquo; If You are interested (Let me know in the comments).\nConclusion It\u0026rsquo;s Harder for humans to brake up with their habits, but for a starter, Start with what\u0026rsquo;s best and you\u0026rsquo;ll be more productive with the time. VS Code is a great and easy to use editor or \u0026ldquo;A Development Environment\u0026rdquo;, as nothing as I seen in the past, No doubts it\u0026rsquo;s the most favourite.\n","permalink":"https://www.tecinpact.tk/post/vs-code-for-web-developers/","tags":["Windows","Linux","Web Development"],"title":"VS Code for Web Developers"},{"categories":[],"contents":"Introduction I Was surprised and wasn\u0026rsquo;t sure is this a spam or not, Top Level domains for free? that\u0026rsquo;s Odd to be exact, But yeah, Freenom offers top level domains for no cost at all! and that\u0026rsquo;s weird. In this article, I\u0026rsquo;ll show you how you can get a Freenom top level domain for free and in the correct way. Follow this guide very carefully because anyone can f*ck it up in no time.\nHow do they do that? Well, Freenom offers free domains of .tk .ml .ga .cf .gq extensions for no cost at all, But how do they do that? I didn\u0026rsquo;t found any good explanation on how they do that or anything I can belive, so I came up with my own theory on this conspiracy. No they aren\u0026rsquo;t aliens or something like that. These are domain zones of small exotic countries or even semi-independent parts of other countries – sometimes just a couple of islands in the ocean. so as silicon valley in china, they don\u0026rsquo;t give a F*ck on world costs or nothing. And they have pretty flat rates on mostly every single domain name. Also they have a 99.9% online rate so I don\u0026rsquo;t see anything bad about them.\nWhere Are these domains From?    TLD Corresponding country or territory     .tk Tokelau, three coral islands in the Pacific Ocean with a capital that rotates between the islands each year. De-jure part of New Zealand.   .ml Mali, a landlocked country in North-West Africa with a 10% rate of Internet use among its entire 20 million population.   .ga Gabon, a small nation on the western coast of Africa which has recently undergone a military coup against its president.   .cf Central African Republic, a country where 4% of inhabitants have regular access to the Internet. Obviously located smack in the center of the African continent.   .gq Equatorial Guinea, a tiny African country with a totalitarian government that accumulates all the spoils from its rich oil reserves.    Are these safe? Let me introduce my self in this part. These aren\u0026rsquo;t safe at all because most of the scammers use them and even google rejects them. BUT I HAVE A SOLUTION. This is the part where big brains f*ck their selves up. You can\u0026rsquo;t use these domains as is, there is a simple but effective work arround. please let me show you.\nWhere to begin? You have to trust me and follow my guide lines STRICTLY. If you got into a problem you can\u0026rsquo;t solve, contact me and I\u0026rsquo;ll Help you, otherwise\n Provide real Details Renew your domain when it\u0026rsquo;s available Don\u0026rsquo;t lose any of your passwords Don\u0026rsquo;t share your accounts Don\u0026rsquo;t ever provide others with your domains  If you get these nice and clear, You\u0026rsquo;re good to go. Let\u0026rsquo;s Begin shall we?\nRegistering Your Accounts Use your email and password option here, Do NOT EVER USE ANY 3RD PARTY LOGINS! Use Email and Password! otherwise you\u0026rsquo;ll be in a big trouble in the future, and freenom dosent even care about it so probablly you\u0026rsquo;ll lose your domain and your account. Now that\u0026rsquo;s out of the way, Just Follow me\nNote: I\u0026rsquo;m using a temp mail But you have to use an authentic mail address, use your Gmail instead.\nHead on to Freenom.com\nThen Enter the domain name you want to use with .tk at the end. There\u0026rsquo;s a weird bug going on which it dosen\u0026rsquo;t allow users to get domains if you only enter the domain name\nNow click on Check Availability to check wether the domain is available or not\nIf It\u0026rsquo;s Available, You can see it selected in .Tk extention as below, but if you want something else you can select them too.\nFor this demonstration I\u0026rsquo;m selecting all available 5 domains. Then click on checkout to go to the purching section.\nHere you can see it gives you 03 months for free, but if you want more time, just change it.\nI recomend to use the 12 months for free option, You can renew the domain for free after this time period.\nClick continue to continue\nHere, in the bottom left section, enter your email and click Verify my email address\nIf you did it successfully, now go to your mail and confirm your account.\nHere you can see Freenom sent me a confirmation link, click on it to continue.\nNow in the next section, If you\u0026rsquo;re a new user, you have to use your real information to fill this up. Don\u0026rsquo;t worry about these information because no one\u0026rsquo;s going to murder you or send an assasin to kill you from these addresses, also Freenom offers IDShield so no one can get it.\nIf everything went correctly, well done! you have some domains now! After this we have to setup our nameservers for Internet to trust our Domains.\nGo to freenom again and under the service section select My Domains\nHere, you can see the domains you just purched. Now go to Netlify.com.\nselect SignUp To create an account.\nAgain, select Email Signup section.\nEnter your Email and a new password to continue.\nThey\u0026rsquo;ll send a new confirmation email and go to your email section to confirm it.\nHere you can see the Verify email button, click it to continue.\nHere you will redirected to netlify again, and Now let\u0026rsquo;s Setup our domains.\nNow, Click on domains section to get to your netlify domains list.\nClick on add or register domain button to add our registered domains\nEnter the domain you just registered and click verify.\nHere, they say that our domain is registered. and it\u0026rsquo;s registered under our name so click Yes, add domain to continue.\nYou can add your DNS Records now, or later so i\u0026rsquo;m not adding anything. click continue.\nNotice these DNS nameservers? Copy or right them down somewhere, because we have to connect our domain to these nameservers.\nGoto your freenom domains page and select on manage domain\nIt asked me to sign in again so I did.\nGoto management tools \u0026gt; Nameservers\nHere, select use custom name servers and enter the information you copied from the Netlify domain page. And click change Nameserver to transfer the domain.\nYou\u0026rsquo;ll be greated with this screen if it was successfully done. Now go the netlify page\nClick on Done Button to add your domain.\nNow! you\u0026rsquo;re pretty much done with securing your domain. so add DNS Records, enable security features and do what you want! Congradulations with your new domain!\nTo be clear, click add DNS button to add your DNS Records and you\u0026rsquo;re Greated with this modal, here you can use minimum of 1 second on TTL And that\u0026rsquo;s a huge improvement!\nHere you can see I did the above steps with all of my domains and now they are secure and safe, also fast.\nNow What? That\u0026rsquo;s all for today guys, you can do alot more with these Domains now! Setup custom emails, setup custom websites and lot more! I\u0026rsquo;ll provide you alot more tutorials to continue with in a later day so stay tuned.\nHow do i renew my domain? After you 1 year time period has over, You will be greated with a renew button in freenom domain management page. click on it and you\u0026rsquo;re pretty much done.\nWeb hosting? emails? I Will cover them in the future guys, It\u0026rsquo;s not today\u0026rsquo;s topic.\nWhere can I use these now? Anywhere, Blogger, wordpress, firebase etc etc\u0026hellip;. If you\u0026rsquo;re visiting my blog in the early ages, even I\u0026rsquo;m using a .Tk domain to be clear.\nSSL Certificates? Netlify offers SSL Certificates for free so go to your domain to set it up. It\u0026rsquo;s free and could take upto 24h to completely offer a Certificate.\nHow can i get a .com .net .org domain? Don\u0026rsquo;t waste your money on godaddy or websites like that for costy domains, use Namecheap.com Dynadot.com or Freenom.com. Always compare and you\u0026rsquo;ll be able to find a Pretty cheap deal so far.\nConclusion Free TLD Domains are easy to get and use, also .Tk is the #3 of world\u0026rsquo;s most registerd domain names according to This Article (2019) and don\u0026rsquo;t be shy to use it. There are companies using even subdomains! just use it in the correct way.\n","permalink":"https://www.tecinpact.tk/post/free-top-level-domain-names-2020/","tags":["Web Admin","Domains","Web Development"],"title":"Free Top Level Domain Names 2020"},{"categories":[],"contents":"Introduction Youtube is the main source of entertainment these days, but people still want to enjoy radio streams for no reason, online radio stations are costy and it\u0026rsquo;s nearly impossible for a normal person to start an online radio station without getting in to any of the top stupid costing radio stream services. In this article, let me show you how I made an online radio station without wasting a single penny, or without sacrificing the quality\nSoftwares And Services If you are searching on this topic, chances are, you\u0026rsquo;re probably a tech geek. But I\u0026rsquo;m creating this article noobs in mind, anyone can follow up this tutorial and if you are a geek, I\u0026rsquo;ll present you with extra tips to experiment with. My goal is to use Shoutcast so in 3rd party services,\n Listen2myradio Visit Winamp Media Player Download SHOUTcast DSP For Winamp Download  Overview Guide If you\u0026rsquo;re a geek and want to do it your self, here\u0026rsquo;s the deal, just create an account and complete it on Listen2myradio service and use winamp DSP or any other DSP software to stream your cast in to it and that\u0026rsquo;s it. If you need my help, follow up this step-by-step guide.\nListen2MyRadio All right, they didn\u0026rsquo;t sponsor me or anything like that, I chosed this option because of it\u0026rsquo;s freely available features. let me show you, The provide you\n A Personal Page \u0026amp; A Personal Subdomain Shoutbox, Blog and Gallery Up to 5000 listeners without quality reduction Flash player \u0026amp; Windows Media Player Supported by Ads 3 server locations \u0026amp; Instant setup  For No Cost At All! If you reach your 5000 Listener count, you can expand your station for about 6.25$ / month in the time period I\u0026rsquo;m writing this. I\u0026rsquo;m pretty sure you aren\u0026rsquo;t going to hit that limit sooner, so free radio for a much longer time! Their theming options are very limited BTW. But modern and simple\n ❝ listen2myradio was established in 2006 as the first free shoutcast hosting company on the internet, and even today listen2myradio remains the biggest free shoutcast hosting company in existence. More than one million users have signed up to listen2myradio for both our free and premium services. We specialize in all aspects of streaming over the internet. ❞\n Setting Up Listen2MyRadio I\u0026rsquo;m using a temp mail address to signup and stream a session.\nStep 1 Goto www.listen2myradio.com And Click on Sign Up button under Radio Streaming Section.\nStep 2 Fill up the signup form and click on create my account button\nIf Everything Went well, You\u0026rsquo;ll See a blue message at the top of the form.\nNow Go To your email viewer and confirm your account with the confirmation link provided.\nIf you did it correctly, you\u0026rsquo;ll be presented with this screen. Now select Return to login page.\nStep 3 Enter your email and password you just created and login\nFrom this page, select Audio account.\nThis is an important step, so be careful with this one. Do Not USE CAPITAL LETTERS! Fill the form with your broadcast channel details and in the subdomain section, be careful with your selection, because it\u0026rsquo;s your subdomain, it is the URL to listen to your radio station.\nOn server Type, select Shoutcast, select UK Server and the broadcaster password is used to broadcast your stream in to the radio, so select a password wisely.\nIf you didn\u0026rsquo;t listened to me and added Capital letters, well fix it now!\nHere you can see, your broadcasting station is getting ready to deploy, it would take some time so grab a coffee or something to eat.\nIf you did everything correctly, welcome to your dashboard DJ!\nStep 4 As I said before, you can have a blog and a gallery here, so if you\u0026rsquo;re Interested go to this section.\nFor this demonstration, I Don\u0026rsquo;t need a blog or a gallery so I\u0026rsquo;m just disabling everything, if you want them, just enable it and you\u0026rsquo;re good to go.\nNow, if you have eyes, you can see something red here, remember kids RED = BAD. so we need to fix it. Click on the first link which says Add Blog Post bla bla bla and wait for it to load.\nNow Here my friends, you can see the interface you have to deal with, if you are doing your Blog, but for no reason, you have to have a single post to start a stream, so I\u0026rsquo;m filling it up with a placeholder. Don\u0026rsquo;t worry, this wont be published if you disabled the blog, if you need it, add something useful.\nIf you did it correctly, now you can see your 1st post here. Enough work over here so lets continue with the secont link which says Add Gallery bla bla bla.\nKids, this is the gallery manager, if you are using it, upload something special or useful, otherwise upload something, because again for no reason, you need to have a single gallery to stream.\nI Chosed this lovely picture of a headset and press save to gallery.\nIf you did it correctly, you can see something like this. then we can get to our final step on fixing the server. click on the third red link which says please update radio text.\nnow this is another important step. Channel name should be your channel name and it should have more than 10 characters, channel description should have more than 150 and About us should have more than 400 characters. upload your logo to stream icon, recheck your subdomain and press confirm! wait for a little bit and you\u0026rsquo;ll be presented with this screen if everything went to the plan!\nNow select the big logo to go to your main dashboard, and it should be ready to stream.\nNotice something? yeah all the bad is gone! and we\u0026rsquo;re ready to rock on.\nSetting Up Softwares Here, we are using Winamp And Shoutcast to setup a simple but professional setup. you can use something like Virtual DJ, SAM Broadcaster etc. but we are considering only free options in this post, if you need a complete guide on Virtual DJ and SAM Broadcaster, let me know in the comments. Download And install Winamp And Shoutcast Usually.\nFollow up these steps, I don\u0026rsquo;t think I want to explain this but I\u0026rsquo;ll whenever it\u0026rsquo;s required.\nDownload\nNow Here, If you don\u0026rsquo;t see the Winamp like in the picture above just press this arrow key\nNow Close the winamp completely and download and install Shoutcast\nDownload\nWinamp would open up with a window like this, this is the window we\u0026rsquo;re going to use to setup the radio stream. If you cant\u0026rsquo;s see this window,\nGoto Options \u0026gt; Preferances\nSelect on Plug-ins \u0026gt; DSP / Effect \u0026gt; SHOUTcast Source DSP \u0026gt; Configure active plugin\nNow That out to the side, Copy the IP Address, Port and Stream Password\nAnd Paste respectively in Server Address, Port and password. also change Connect Using to V1.x and DO NOT FILL DJ / User ID.\nEnter your broadcast station name in the name section, your URL in the URL Section.\nSelect your bitrate you prefer to broadcast with\nSelect the 2nd option if you want to display song titles in the radio station.\nNow, Select the Connect button, and Tick Auto connect if you want it to automatically connect to the server if something went wrong\nYou are ready to rock, you can see your data usage in the sent section and to be exact, your playing and the radio station has a slight delay to improve audio quality through buffering so it\u0026rsquo;s natural.\nStreaming To Radio All right mr.DJ, now you\u0026rsquo;re ready to rock up. But first! create your play list in the winamp software and to start broadcasting, just play it! it\u0026rsquo;s that simple, for programs, pre record your voiceover and add to the playlist. Unfortunately, for now, we don\u0026rsquo;t have a method to speak live to the audience.\nStreaming link You can give the subdomain to anyone to listen to your radio online, cloak in in dns to look legit maybe? I\u0026rsquo;ll provide a future post on that manner.\nNow this is the subdomain you made. and your radio is streaming on this domain.\nThis is what the streaming page looks like alongside\nIf you\u0026rsquo;re running an uninterrupted radio stream, don\u0026rsquo;t forget to activate playlist repeat and maybe shuffle?\nDon\u0026rsquo;t Forget to turn your stream off after the broadcast.\nData Usage This is something Very important to most of the users, I know. So I decided to calculate the maximum data consumption on common bitrates, for an hour. ( This is a theoretical maximum )\n   Bitrate Data Usage For 1 hour     64kbps 28.8 MB   96kbps 43.2 MB   112kbps 50.4 MB   128kbps 57.6 MB   160kbps 72.0 MB   192kbps 86.4 MB    Seems like pretty good for a starter, isn\u0026rsquo;t it.\nExtending Plans If you are going over 5000 simultaneous listeners, Listen2myradio has a packages suiting anyone. you can see more details Here\nConclusion Well, It\u0026rsquo;s a long but simple process, I totally prefer this setup to any starter in online radio broadcasting. If you got stuck or something went wrong, please feel free to contact me and inform the situation. I hope you got something new and Maybe, I\u0026rsquo;ll do a highly professional radio streaming guide later? and another method of free broadcasting is on the way, so stay tuned!\n","permalink":"https://www.tecinpact.tk/post/budget-online-radio-station-guide-2020/","tags":["Windows","Online Radio"],"title":"Budget Online Radio Station Guide 2020"},{"categories":null,"contents":"Introduction In this post, I would like to present to you with the best media players according to technologies they use. This is a weird post to make in this time period but I\u0026rsquo;m creating this as a follow-up for a new post I\u0026rsquo;m planning to post in the future about Online Radio Broadcasting Technologies.\nWhat I\u0026rsquo;m Considering Here Well, While I\u0026rsquo;m Preparing the list, I was considering about several features to back it up with. We Humans are highly on to habits and we don\u0026rsquo;t consider newer technologies or novelties that much, which in most cases make us miss important and easier, maybe more stable options, without even a clue. So I made the list by looking foward on\n Codecs Stability Intergration User-Interface User-Experiance Installation Playlist Creation User Hot keys Added Features Resource Usage  Why Should I Even Care? First of all, about the mess chris made with his Anti-VLC Situation, I\u0026rsquo;m not forcing anyone to change their life style here, but you should look what\u0026rsquo;s out there in the field and make yourself comfortable with the situation.\nInstallation I Will provide choco commands and links for every player. If you don\u0026rsquo;t know what choco is, check out choco\nWindows #1 Media Player Classic Wait, What? But, Yes. Media player classic is the best media player for windows considering the backend technologies and the resource usage. also MPC has the most wide range of codec support amoung all of the other competitors. It\u0026rsquo;s extremely light weight and lightning fast. But it has a outdated user-interface BTW.\n  \u0026gt; choco install mpc-hc\r  #2 KMPlayer This is a popular player but it consumes alot of resources so it wont be ideal for small systems and low ram machines. so if you\u0026rsquo;re considering using KMPlayer, it has a wide range of codec support and VR Viewing if you\u0026rsquo;re into those kinds of things. I personally use KMP on my mainstream PC, but not for my laptops.\nDownload\n#3 VLC Here it is, the most famous and widely used media player in the whole universe. but do everyone right about their decision? well, not at all. why? VLC has a lot more going in it\u0026rsquo;s back end. it has it\u0026rsquo;s own codecs, it uses more ram and so on. But, if you\u0026rsquo;re an Advanced User, I won\u0026rsquo;t bother you at all. For Others, Just Don\u0026rsquo;t use it. It\u0026rsquo;s flimsy and not good for me.\n  \u0026gt; choco install vlc\r  Linux #1 Celluloid Celluloid (formerly GNOME MPV) is a simple GTK+ frontend for mpv. It aims to be easy to use while maintaining high level of configurability. Celluloid is capable of using mpv\u0026rsquo;s configuration files as-is. Keybindings can be set up using mpv\u0026rsquo;s input configuration file. The playlist entries can be added, removed, or rearranged easily with drag and drop operations. Celluloid implements the MPRIS D-Bus Interface. This allows for better integration with desktop environments that have compatible MPRIS clients. Also Celluloid is fully functional on Wayland.\nInstallation\n#2 VLC For the VLC Fans, here it is again in the show! But considering linux, VLC Isn\u0026rsquo;t as good as on windows. why? probably their back end. VLC is designed for windows and that\u0026rsquo;s where it\u0026rsquo;s peak at. for linux, it\u0026rsquo;s another story. it LAGS! that\u0026rsquo;s my problem with it.\nDownload\nAndroid Video #1 MX Player This is a light weight and low-resource hungry player amoung others. However mx player has a excellent intergration amoung many of the video players in Android Platform\nDownload\n#2 VLC And Yeah, Again VLC. as in Android, VLC holds a clear and a sweat track record while it can also play both video and audio types. you should check it out.\nDownload\nAudio #1 Retro music This is my favourit, It has a modern and sleek design language while maintaining a clutter free clear Interface. Also it has a wide range of codec support in android platform.\nDownload\n#2 Eon Music Player Well, this is another player with a sleek and modern design language, however this player has a great integration within the roots of the android system. so you should check this out as soon as possible.\nDownload\nConclusion After all, at the end of the day, we\u0026rsquo;re using our favourite players to play our favourite songs no matter how boring or no matter how technologically down they are, but It\u0026rsquo;s worth giving a shot out to these newcomers and re-imagine our lives with them.\n","permalink":"https://www.tecinpact.tk/post/best-media-players-2020/","tags":["Windows","Linux","Media Players","Android","Review"],"title":"Best Media Players 2020"},{"categories":null,"contents":"Introduction Windows based PCs have a registry system to take control over the system wide operations and most of the times windows default operations are useless to most of us and somewhat annoying. So to be cleared, I made this easy to install Registry file to speed up your PC in matter of seconds.\nWhat Does It Do? Well, here comes the boring part. If you don\u0026rsquo;t want to know what this file does to your PC, just skip this section and use the link below to download the program.\n Adds Copy To and Move To options in files and folders context menu, so that you can easily copy and move them to other locations. AutoEndTasks - Forces Windows to automatically end user services when the user logs off or shuts down the computer. It\u0026rsquo;ll prevent the \u0026ldquo;Closing apps and shutting down, This app is preventing shutdown\u0026rdquo; screen from appearing. Check this topic for detailed info. HungAppTimeout - Reduces system waiting time before killing user processes when the user clicks on \u0026ldquo;End Task\u0026rdquo; button in Task Manager. MenuShowDelay - Decreases menus show delay time, it\u0026rsquo;ll make the menus show faster upon clicking. WaitToKillAppTimeout - Reduces system waiting time before killing user processes when the user logs off or shuts down the computer. LowLevelHooksTimeout - Reduces system waiting time before killing not responding services. MouseHoverTime - Reduces popup delay time to show popup description faster when you move mouse cursor over an item. NoLowDiskSpaceChecks - Disables the low disk space check so that you don\u0026rsquo;t get the annoying low disk space notification in system tray. LinkResolveIgnoreLinkInfo - Prevents Windows from wasting time in searching for a program which no longer exists in your system when you try to open its shortcut. NoResolveSearch - Prevents Windows from searching for the disk drive to resolve a shortcut. NoResolveTrack - Prevents Windows from using NTFS file system\u0026rsquo;s tracking feature to resolve a shortcut. NoInternetOpenWith - Disables \u0026ldquo;Search on Internet\u0026rdquo; prompt in \u0026ldquo;Open with\u0026rdquo; window so that you can directly see available programs list. WaitToKillServiceTimeout - Reduces system waiting time before stopping services when the services are notified about shut down process. Change to Photo Viewer - In Windows 10 It\u0026rsquo;s default to use the photo app and that app is Eating resources as hell, so I decided to retrieve the defaults Enable Last Active Click - So You can switch windows with a single click Disable Lockscreen - Most of us dosent even need the lock screen, and why should we keep it? Disable Cortana - Cortana is a pain in the head as it dosent even work very well Delete paging on Shutdown - Windows use this to be an alternative to the ram but we shouldn\u0026rsquo;t keep it after the machine shuts down itself Disable the Startup Delay - Windows has a startup delay in default to pre-load apps and so on, but it annoys and dosent work on newer PCs Disable Shake To Minimize - Windows has a feature were you can shake a window to minimize all other windows, which most of the windows users dosent even know about.  How To Install Step 1\n Download the file from the link below and extract it. If you have trouble extarcting the File, Install choco and Run\n   \u0026gt; choco install winrar -y\r   And extract it with winrar\n Downloaded File Extract Here\nStep 2\n Right-Click on Apply Tweaks File and select merge, give it a yes on the next window and you\u0026rsquo;re pretty much Done with the process\n Right-Click The File And Select Merge Click On Yes You\u0026rsquo;re Done!\nStep 3\n Restart Your PC\n Download You can download the tweak from Here 2kb\nTroubleshoot If Something odd happens, or you just need to restore the changes, simply run the Restore Tweaks File and you\u0026rsquo;re Good As new.\n","permalink":"https://www.tecinpact.tk/post/windows-10-speedup-registry-tweaks/","tags":["Windows","Registry","Tweaks"],"title":"Windows 10 Speedup Registry Tweaks"},{"categories":null,"contents":"Introduction Do you ever thought about a single command to install, uninstall or update softwares in Windows? How about a script automatically do everything for you? Guess what, you\u0026rsquo;re in the perfect place!\nChocolatey is a package manager for Windows, which you can install by a single command and do everything with a single command!\nShowcase Install softwares\n\u0026gt; choco install vlc\r Updated softwares\n\u0026gt; choco upgrade vlc\r Uninstall softwares\n\u0026gt; choco uninstall winrar\r And explore more in the docs\nInstallation Step 1\nInstallation is not much difficulty however, you just need a powershell window with administration Access. Right-click windows icon at bottom left and select powershell with administration Access.\nStep 2\nCopy the code bellow and paste it in the powershell\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\r And press enter, wait and you\u0026rsquo;re ready to go.\nUsage Always start a powershell window with administration Access. Use the code below to get the help documents\n\u0026gt; choco -?\r Installing Softwares Installation is simple and easy as it seams, replace the package name with the software you need to install and you\u0026rsquo;re ready to go!\n\u0026gt; choco install package-name -y\r You can also install several softwares at once, for an example I\u0026rsquo;ll install VLC Firefox and Spotify at once as below\n\u0026gt; choco install vlc firefox spotify -y\r Also you can get all of the package names and commands by going to chocolatey site and searching for softwares\nUpdating softwares Updating softwares is something harder in Windows, but with chocolatey, harder no more! You can update everything at once by using\n\u0026gt; choco upgrade all -y\r Or packages individually by using\n\u0026gt; choco upgrade package-name -y\r Uninstalling softwares Usually we need a 3rd party uninstaller for this, but with choco, we are saved! Choco logs and monitors all installation by default so we can easily uninstall anything we install with choco by using\n\u0026gt; choco uninstall package-name -y\r Conclusions Chocolatey package manager is a very useful tool I use personally on my computers. It makes installations updates and uninstallations easier and less time consuming. However A little bit of knowledge on working with powershell is necessary to operate with chocolatey.\n","permalink":"https://www.tecinpact.tk/post/the-package-manager-for-windows-chocolatey/","tags":["Windows","Package Manager","Introduction","Review"],"title":"The Package Manager for Windows [ Chocolatey ]"},{"categories":null,"contents":"Introduction Code editors are usually overpowered text editors. Mainly they are used for editing codes, but in the modern world, code editors are playing a role of complete development environments for some frameworks, with the help of extensions.\nIn this article, I would like to present you my most favourite code editors and also some download links, and typical extensions I use.\n#1 Visual Studio Code Visual studio code is a multi talented and an open source project by Microsoft. And also it\u0026rsquo;s available for Windows Linux and Mac OS users. I use visual studio code mainly for web developments, cross platform app development, design and prototyping, server side scripting and as a typical code editor for other projects.\nDownload Here\nWith this editor, I also use live server extension, SCSS compiler, HTML beautifier, HTML minifier extensions regularly, also you can find them in the visual studio code extension marketplace.\n Key Features\n cross-platform open source via MIT license (Github link) built-in Git (including merge conflicts, diff checking, and modified file tracking from within the editor) in-editor debugging large library of extensions and plugins compatible with nearly every programming language very lightweight in comparison to other, similarly robust editors quick and responsive specific Linux distros for Ubuntu, Fedora, SUSE, Red Hat, and Debian IntelliSense highlighting and autocomplete works like a dream   #2 Atom Atom is another great text editor, in this case a perfect code editor made by GitHub but now owned by Microsoft. Microsoft development team is maintaining the atom code editor for a while now and it established a perfect user base and established as a premiere text and code editor out there. The best part is that Atom is totally free, open source, and highly customizable. Built around a minimal core, Atom comes with multiple language-specific packages built in, and the library of community-written ones has exploded over the years since the editor was first released. Atom is as robust as you need it to be – if the editor doesn’t do something you need, you can create that feature yourself. The Teletype features has been embraced by users, too. It allows multiple developers to work on the same code from remote locations.\nDownload Here\n Key Features\n File system browser Teletype Fuzzy finder for quickly opening files Fast project-wide search and replace Multiple cursors and selections Multiple panes Snippets Code folding A clean preferences UI Import TextMate grammars and themes Highly extendable Highly theme-able Incredibly passionate community   #3 Sublime Text Sublime text is something different from others, it was designed coding on mind. It has some cons when comparing to something like visual studio code, but for the working part it\u0026rsquo;s doing perfectly, but this doesn\u0026rsquo;t support extensions by this time. Sublime text can be used as a portable text editor and it\u0026rsquo;s mostly usable for web developments \u0026amp; simple code writing.\nDownload Here\n Key Features\n Goto Anything (lightning fast search/shortcuts) Command Palette Keyboard shortcuts make everything smoother Split Editing Highly customizable Multiple selections Distraction free writing mode Instant project switch Plugin API And more   Final conclusion Yes, there would be new and flashy text and code editors out there and most of the developers will develop and deploy their own text editors and code editors in the future, but these three will be always in my heart and these are what I use. But at the end of the day I use visual studio code for most of projects because of stability and the reliability Microsoft provides with software.\n","permalink":"https://www.tecinpact.tk/post/best-code-editors-of-2020/","tags":["Editors","Introduction","Review"],"title":"Best Code Editors of 2020"},{"categories":null,"contents":"Introduction Hello There My Gorgeous friends! From today on, this would be my hobby, blogging about technology and solving your IT Related Anything!\nWhat I\u0026rsquo;m Posting? As we speak, I\u0026rsquo;m planning to blog about\n Web dev PC / Android Software New technologies Security and Tips Coding and Programming  And so much more on modern technologies.\n Stay Tuned With RSS Feed Subscription\n Don\u0026rsquo;t forget to ask me anything through out my Social media links And E-Mail.\nAlso Don\u0026rsquo;t forget! Suggestions are open.\n","permalink":"https://www.tecinpact.tk/post/first-post/","tags":["Introduction"],"title":"First Post"},{"categories":null,"contents":"TECINPACT Technology Guide Introduction TECINPACT is a Digital Guide Book to navigate through the 21st century cyber space in a safe and cheap manner. As we can get most of the products and services we\u0026rsquo;re paying for pennies, my vision here is to support the non-geeks and starters to start their Cyber career with a boost.\nAs I\u0026rsquo;m Planning to publish most of the content out-of-charge, it would be nice if you can share and support the site on further developments, also you can contact me anytime over my social media links with the short bio.\nI Would cover on\n Web Development And Administration Modern Web Technologies Mobile App Development And Technologies Desktop Software Development And Technologies Operating Systems And Utility Softwares Hobby Project Ideas  As A Daily Base\nFormat My Posts would be in a step-by-step order, in order to make it easier to follow up. However reviews and those kinds of posts would review the software or the technology and provide you with resource links or download links at the bottom of the page.\nIf You Want To Contact Me Check out my portfolio Or use The social Icons\n","permalink":"https://www.tecinpact.tk/about/","tags":null,"title":"About"},{"categories":null,"contents":"About Me I Am a webadmin and a Software developer, mostly freelancing for the past decade. With rises and falls of newer technologies and technological trends I have many experiences over the fields of,\n Web Administartion Server Maintanance Mobile And Desktop Software and Utility Development Hybrid App Development Photo manipulation and photography Video Editing and videography  Also as a side quest in my life, I started this blog to showcase my knowledge and provide starters with any help they need within their careers.\nWhere I Worked In For The past few decades, I worked with several local and global companies and trademarks within the fields of web development, mobile development, photography and photo manipulation\n  Personal Projects Agencies And Trademarks Other Projects   Is This? My Portfolio? Well, Actually No. You can Visit my portfolio from Here And It Would be nice to see you around!\nStuck on your projects? I Would Like To Help You, Contact me through Facebook, Whatsapp, Twitter, Instagram Or Just send me an E-Mail\n","permalink":"https://www.tecinpact.tk/portfolio/","tags":null,"title":"Portfolio"},{"categories":null,"contents":"","permalink":"https://www.tecinpact.tk/search/","tags":null,"title":"Search Results"}]